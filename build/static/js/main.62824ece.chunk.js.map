{"version":3,"sources":["components/PrayerRequests.tsx","components/Header.tsx","components/Main.tsx","components/HomelessPeople.tsx","components/MapComponent.tsx","api/event.tsx","components/AddEventDialog.tsx","img/ggchurch.png","components/ViewEventDialog.tsx","components/ErrorBox.tsx","components/Schedule.tsx","api/auth.tsx","contexts/authContext.js","components/AccountSettings.tsx","components/Splash.tsx","components/Login.tsx","components/PasswordInput.tsx","components/FindAccount.tsx","components/Register.tsx","api/user.tsx","components/PickResetMethod.tsx","components/EnterCode.tsx","components/ResetPassword.tsx","components/PrivateRoute.tsx","App.tsx","theme.js","index.tsx"],"names":["PrayerRequests","props","React","Component","Header","className","AppBar","position","Toolbar","Typography","variant","to","activeClassName","Main","this","children","HomelessPeople","MapComponent","getEvents","a","axios","get","createEvent","event","post","deleteEvent","id","delete","AddEventDialog","state","title","startTime","endTime","date","description","undefined","submitPressed","internalServerError","handleTitleChange","bind","handleStartTimeChange","handleEndTimeChange","handleDateChange","handleDescriptionChange","handleCancel","handleSubmit","e","target","value","setState","onCancel","endTimeIsValid","startHours","hour","startMinutes","minute","endHours","endMinutes","startDateAndTime","set","endDateAndTime","eventAPI","start","toJSDate","end","response","data","DateTime","fromISO","onEventAdded","status","console","error","TextField","titlehasErrorTxt","onChange","label","helperText","inputProps","maxLength","utils","LuxonUtils","DatePicker","datehasErrorTxt","inputVariant","format","margin","InputProps","endAdornment","InputAdornment","color","TimePicker","startTimehasErrorTxt","endTimehasErrorTxt","getEndTimeHelperTxt","multiline","rows","FormHelperText","hasInternalServerError","Button","onClick","size","ViewEventDialog","notFound404Error","handleDelete","onDelete","startStr","fromJSDate","toFormat","endStr","dateTimeStr","src","churchImg","alt","endIcon","ErrorBox","message","Schedule","currentEvent","addEventDialogOpen","events","eventsLoaded","errorLoadingEvents","deleteEventSnackbarOpen","successAddEventSnackbarOpen","eventClicked","eventDeleted","eventAdded","openViewEventDialog","closeViewEventDialog","openAddEventDialog","closeAddEventDialog","handleCloseAddEventSnackbar","handleUndoAddEvent","handleCloseDeleteEventSnackbar","handleUndoDeleteEvent","loadEvents","result","forEach","filter","push","localizer","luxonLocalizer","that","style","height","onSelectEvent","CircularProgress","viewEventDialog","Fab","aria-label","Snackbar","open","autoHideDuration","onClose","action","Fragment","IconButton","fontSize","register","email","password","login","hasLoginCookie","Cookies","createContext","Provider","Consumer","AuthContextProvider","isLoggedIn","auth","logout","AccountSettings","callback","history","log","width","disabled","Divider","context","handleLogout","Splash","LoginFailureType","PasswordInput","togglePasswordMask","prevState","passwordIsMasked","classes","type","getVisibilityIcon","SearchAccountFailureType","Login","submitIsTouched","loginFailureType","NONE","handleEmailChange","handlePasswordChange","length","BAD_EMAIL_PASSWORD","INTERNAL_SERVER_ERROR","ACCOUNT_LOCKED","emailHasError","passwordHasError","hasFormError","getFormErrorText","Register","passwordIsTouched","emailIsTaken","test","isValidEmail","passwordIsValid","passwordHasCorrectLength","name","getEmailHelperText","getPasswordHelperText","sendResetCode","selectedContactMethod","checkResetCode","resetCode","params","changePassword","PickResetMethodFailureType","FindAccount","contact","searchAccountFailureType","handleContactChange","account","contactInformation","contactInfo","phone","ACCOUNT_NOT_FOUND","contactHasError","displayFormError","EnterCodeStatusType","PickResetMethod","qs","parse","location","search","ignoreQueryPrefix","pickResetMethodFailureType","handleChange","userAPI","emailOption","Radio","checked","phoneOption","Paper","elevation","ResetPasswordFailureType","EnterCode","qsParse","code","enterCodeStatusType","handleCodeChange","resendCodeClicked","displayCodeTextFieldError","codeIsValid","INVALID_PASSCODE","CODE_EXPIRED","TOO_MANY_ATTEMPTS","RESENT_CODE","contactDetail","getCodeHelperText","displayFormHelperText","formHelperTextIsError","getFormHelperText","displayResendCodeLink","ResetPassword","resetPasswordFailureType","submitButtonTouched","passwordChangeSuccess","passwordHasCorrectCharacters","PASSWORD_EXPIRED","setTimeout","displayPasswordError","PrivateRoute","options","component","path","App","exact","theme","createMuiTheme","palette","primary","teal","secondary","orange","danger","responsiveFontSizes","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.62824ece.chunk.js","sourcesContent":["import React  from 'react';\r\n\r\ntype PrayerRequestsState = {\r\n\r\n}\r\n\r\ntype PrayerRequestsProps = {\r\n\r\n}\r\n\r\nclass PrayerRequests extends React.Component<PrayerRequestsProps, PrayerRequestsState> {\r\n    constructor(props: PrayerRequestsProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <h1>Prayer Requests</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PrayerRequests;","import React from 'react';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport PrayerRequestIcon from '@material-ui/icons/AccessibilityNew';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './Header.css';\r\n\r\ntype HeaderState = {}\r\n\r\ntype HeaderProps = {}\r\n\r\nclass Header extends React.Component<HeaderProps, HeaderState> {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app-bar-container\">\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" className=\"title\"></Typography>\r\n                        <nav>\r\n                            <NavLink className=\"icon-container\" to=\"/features/schedule\" activeClassName=\"icon-container-active\">\r\n                                <EventIcon className=\"icon\" />\r\n                                <div className=\"icon-description\">Schedule</div>\r\n                            </NavLink>\r\n                            <NavLink className=\"icon-container\" to=\"/features/homelesspeople\" activeClassName=\"icon-container-active\">\r\n                                <PeopleIcon className=\"icon\" />\r\n                                <div className=\"icon-description\">Homeless People</div>\r\n                            </NavLink>\r\n                            <NavLink className=\"icon-container\" to=\"/features/prayerrequests\" activeClassName=\"icon-container-active\">\r\n                                <PrayerRequestIcon className=\"icon\" />\r\n                                <div className=\"icon-description\">Prayer Requests</div>\r\n                            </NavLink>\r\n                            <NavLink className=\"icon-container\" to=\"/features/map\" activeClassName=\"icon-container-active\">\r\n                                <MapIcon className=\"icon\" />\r\n                                <div className=\"icon-description\">Map</div>\r\n                            </NavLink>\r\n                            <NavLink className=\"icon-container\" to=\"/features/accountsettings\" activeClassName=\"icon-container-active\">\r\n                                <AccountCircle className=\"icon\" />\r\n                                <div className=\"icon-description\">Account</div>\r\n                            </NavLink>\r\n                        </nav>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\n\r\nimport Header from './Header';\r\n\r\nimport './Main.css';\r\n\r\ninterface MainProps {\r\n  children: any; /* ReactChild | ReactChildren; */\r\n}\r\n\r\ninterface MainState {}\r\n\r\nclass Main extends React.Component <MainProps, MainState > {\r\n\r\n  render() {\r\n    return (\r\n      /*\r\n      TODO: Add to below div\r\ndisplay: flex;\r\nflex-direction: column;\r\nheight: 100%;\r\n      */\r\n      <div className=\"main-container\">\r\n        <Header/>\r\n        <main>{this.props.children}</main> \r\n      </div>\r\n    );\r\n    // TODO: add flex: 1 to main\r\n  }\r\n}\r\n\r\nexport default Main;","import React  from 'react';\r\n\r\ntype HomelessPeopleState = {\r\n\r\n}\r\n\r\ntype HomelessPeopleProps = {\r\n\r\n}\r\n\r\nclass HomelessPeople extends React.Component<HomelessPeopleProps, HomelessPeopleState> {\r\n    constructor(props: HomelessPeopleProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <h1>Homeless People</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomelessPeople;","import React  from 'react';\r\n\r\ntype MapComponentState = {\r\n  \r\n}\r\n\r\ntype MapComponentProps = {\r\n\r\n}\r\n\r\n// TODO: Should {} be MapComponentProps\r\nclass MapComponent extends React.Component<{}, MapComponentState> {\r\n    constructor(props: MapComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <h1>Map of Frederick</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MapComponent;","import axios from 'axios';\r\n\r\nimport Event from '../models/Event';\r\n\r\n\r\nexport const getEvents = async () => {\r\n    return axios.get('/api/events');\r\n}\r\n\r\n// TODO: Return type\r\nexport const createEvent = async (event: Event) => {\r\n    return axios.post('/api/events', event);\r\n}\r\n\r\nexport const deleteEvent = (id: number) => {\r\n    return axios.delete(`/api/events/${id}`);\r\n}\r\n","import React from 'react';\r\n\r\n\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n//import Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport * as eventAPI from '../api/event';\r\n\r\n//import LuxonUtils from 'luxon';\r\nimport LuxonUtils from '@date-io/luxon';\r\n\r\nimport { DateTime } from 'luxon';\r\n\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\n\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport Event from '../models/Event';\r\n\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  TimePicker,\r\n  DatePicker\r\n} from '@material-ui/pickers';\r\n\r\nimport AccessAlarmIcon from '@material-ui/icons/AccessAlarm';\r\nimport EventIcon from '@material-ui/icons/Event';\r\n\r\nimport { InputAdornment } from '@material-ui/core';\r\n\r\nimport './AddEventDialog.css';\r\n\r\ntype AddEventDialogState = {\r\n    title: string | null,\r\n    startTime: MaterialUiPickersDate | null,\r\n    endTime: MaterialUiPickersDate | null,\r\n    date: MaterialUiPickersDate | null,\r\n    description: string | undefined,\r\n    submitPressed: boolean,\r\n    internalServerError: boolean\r\n}\r\n\r\n\r\ntype AddEventDialogProps = {\r\n    onCancel: any // TODO: Type, optional/etc?\r\n    onEventAdded: (event: any) => void;\r\n}\r\n\r\nclass AddEventDialog extends React.Component<AddEventDialogProps, AddEventDialogState> {\r\n\r\n    constructor(props: AddEventDialogProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: '',\r\n            startTime: null,\r\n            endTime: null,\r\n            date: null,\r\n            description: undefined,\r\n            submitPressed: false,\r\n            internalServerError: false\r\n     };\r\n\r\n        this.handleTitleChange = this.handleTitleChange.bind(this);\r\n        this.handleStartTimeChange = this.handleStartTimeChange.bind(this);\r\n        this.handleEndTimeChange = this.handleEndTimeChange.bind(this);\r\n        this.handleDateChange = this.handleDateChange.bind(this);\r\n        this.handleDescriptionChange = this.handleDescriptionChange.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleTitleChange(e: any) {\r\n        const title: string = e.target.value;\r\n        this.setState({title});\r\n    }\r\n    \r\n    handleStartTimeChange(startTime: MaterialUiPickersDate | null) {\r\n        this.setState({startTime});\r\n    }\r\n\r\n    handleEndTimeChange(endTime: MaterialUiPickersDate | null) {\r\n        this.setState({endTime});\r\n    }\r\n\r\n    handleDateChange(date: MaterialUiPickersDate | null) {\r\n        this.setState({ date: date});\r\n    }\r\n\r\n    handleDescriptionChange(e: any) {\r\n        const description: string = e.target.value;\r\n        this.setState({description});\r\n    }\r\n\r\n    // TODO: Correct type\r\n    handleCancel(e: any) {\r\n        this.props.onCancel();\r\n    }\r\n\r\n    titlehasErrorTxt(): boolean {\r\n        const { title, submitPressed } = this.state;\r\n\r\n        return submitPressed && !title;\r\n    }\r\n\r\n    datehasErrorTxt(): boolean {\r\n        const { date, submitPressed } = this.state;\r\n\r\n        return submitPressed && !date;\r\n    }\r\n\r\n    startTimehasErrorTxt(): boolean {\r\n        const { startTime, submitPressed } = this.state;\r\n\r\n        return submitPressed && !startTime;\r\n    }\r\n\r\n    // TODO: Error where start time is after end time\r\n    endTimehasErrorTxt(): boolean {\r\n        const { endTime, submitPressed } = this.state;\r\n\r\n        return submitPressed && (!endTime || !this.endTimeIsValid()) ;\r\n    }\r\n\r\n    endTimeIsValid(): boolean {\r\n        const { startTime, endTime } = this.state;\r\n\r\n        if ( startTime && endTime ) {\r\n            if ( startTime > endTime ) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    getEndTimeHelperTxt(): string {\r\n        const { endTime, submitPressed } = this.state;\r\n\r\n        if ( submitPressed && !this.endTimeIsValid() ) {\r\n            return 'End time must be after start time';\r\n        }\r\n\r\n        return 'What time should the outreach end?';\r\n    }\r\n\r\n    // TODO: Correct type\r\n    async handleSubmit(e: any) {\r\n\r\n        this.setState({submitPressed: true});\r\n\r\n        const { title, startTime, endTime, date, description } = this.state;\r\n\r\n\r\n        if ( !title || !date || !startTime || !endTime || !this.endTimeIsValid() ) {\r\n            return;\r\n        }\r\n\r\n        const startHours: number = startTime.hour;\r\n        const startMinutes: number = startTime.minute;\r\n\r\n        const endHours: number = endTime.hour;\r\n        const endMinutes: number = endTime.minute;\r\n\r\n        // TODO: Type\r\n        const startDateAndTime: any = date.set({hour: startHours, minute: startMinutes});\r\n        const endDateAndTime: any = date.set({hour: endHours, minute: endMinutes});\r\n\r\n        try {\r\n            let response = await eventAPI.createEvent({ title, start: startDateAndTime.toJSDate(), end: endDateAndTime.toJSDate(), description });\r\n            \r\n            let event = response.data;\r\n            event.start = DateTime.fromISO(event.start).toJSDate();\r\n            event.end = DateTime.fromISO(event.end).toJSDate();\r\n        \r\n            this.props.onEventAdded(event);\r\n        }\r\n        catch ( error ) {\r\n            if ( error.response.status === 500 ) {\r\n                this.setState({internalServerError: true});\r\n            }\r\n            else {\r\n                console.error('Unhandled error'); // TODO: Handle this\r\n            }\r\n        }\r\n    }\r\n\r\n    hasInternalServerError(): boolean {\r\n        return this.state.internalServerError;\r\n    }\r\n\r\n\r\n    render() {\r\n        const { startTime, endTime, date } = this.state;\r\n\r\n        // TODO: Async autocomplete for medicine name\r\n        //https://codesandbox.io/s/wj0r6?file=/demo.tsx\r\n        \r\n        return (\r\n            <div className=\"grayout\">\r\n                <div className=\"add-event-dialog\">\r\n                    <div className=\"dialog-header\">\r\n                        <Typography className=\"dialog-title\" variant=\"h4\">Add Event</Typography>\r\n                    </div>\r\n                    <div className=\"dialog-body\">\r\n                        <div className=\"dialog-form\">\r\n                            <TextField error={this.titlehasErrorTxt()} onChange={this.handleTitleChange} className=\"dialog-txt-field\" label=\"Title\" variant=\"filled\" helperText=\"Enter the title of the outreach event\" inputProps={{ maxLength: 64 }} />\r\n\r\n                            <MuiPickersUtilsProvider utils={LuxonUtils}>\r\n                                <DatePicker\r\n                                    error={this.datehasErrorTxt()}\r\n                                    className=\"dialog-picker-field\"\r\n                                    inputVariant=\"filled\"\r\n                                    format=\"MM/dd/yyyy\"\r\n                                    value={date}\r\n                                    margin=\"normal\"\r\n                                    label=\"Start Date\"\r\n                                    onChange={this.handleDateChange}\r\n                                    helperText=\"What date should the outreach be on?\"\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <EventIcon color=\"primary\"/>\r\n                                        </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n\r\n                                <TimePicker\r\n                                    error={this.startTimehasErrorTxt()}\r\n                                    className=\"dialog-picker-field\"\r\n                                    inputVariant=\"filled\"\r\n                                    format=\"h:mm a\"\r\n                                    value={startTime}\r\n                                    margin=\"normal\"\r\n                                    label=\"Start Time\"\r\n                                    onChange={this.handleStartTimeChange}\r\n                                    helperText=\"What time should the outreach start?\"\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <AccessAlarmIcon color=\"primary\"/>\r\n                                        </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n\r\n                                <TimePicker\r\n                                    error={this.endTimehasErrorTxt()}\r\n                                    className=\"dialog-picker-field\"\r\n                                    inputVariant=\"filled\"\r\n                                    format=\"h:mm a\"\r\n                                    value={endTime}\r\n                                    margin=\"normal\"\r\n                                    label=\"End Time\"\r\n                                    onChange={this.handleEndTimeChange}\r\n                                    helperText={this.getEndTimeHelperTxt()}\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <AccessAlarmIcon color=\"primary\"/>\r\n                                        </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n\r\n                            </MuiPickersUtilsProvider>\r\n\r\n                            <TextField\r\n                                label=\"Description\"\r\n                                multiline\r\n                                rows={4}\r\n                                onChange={this.handleDescriptionChange}\r\n                                helperText=\"Enter the description of this event\"\r\n                                variant=\"filled\"\r\n                                inputProps={{ maxLength: 2048 }}\r\n                            />\r\n\r\n                            <FormHelperText className={`${this.hasInternalServerError() ? \"\" : \"display-none\"}`} error={true}>Uh-oh! A problem occured. Please refresh the page and try again.</FormHelperText>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"dialog-actions\">\r\n                        <Button color=\"primary\" className=\"dialog-btn\" onClick={ this.handleCancel } variant=\"contained\" size=\"medium\">Cancel</Button>\r\n                        <Button color=\"primary\" className=\"dialog-btn\" onClick={ this.handleSubmit } variant=\"contained\" size=\"medium\">Add</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddEventDialog;","export default __webpack_public_path__ + \"static/media/ggchurch.641527ed.png\";","import React  from 'react';\r\n\r\nimport './ViewEventDialog.css';\r\n\r\nimport churchImg from '../img/ggchurch.png';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { DateTime } from 'luxon';\r\n\r\nimport * as eventAPI from '../api/event';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport Event from '../models/Event';\r\n\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\ntype ViewEventDialogProps = {\r\n    event: Event\r\n    onCancel: () => void;\r\n    onDelete: (id: number) => void;\r\n}\r\n\r\ntype ViewEventDialogState = {\r\n    internalServerError: boolean;\r\n    notFound404Error: boolean;\r\n}\r\n\r\nclass ViewEventDialog extends React.Component<ViewEventDialogProps, ViewEventDialogState> {\r\n    constructor(props: ViewEventDialogProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            internalServerError: false,\r\n            notFound404Error: false\r\n\r\n        };\r\n\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n    }\r\n\r\n    // TODO: Correct type\r\n    handleCancel(e: any) {\r\n        this.props.onCancel();\r\n    }\r\n\r\n    async handleDelete() {\r\n        const id: any = this.props.event.id;\r\n        try {\r\n            await eventAPI.deleteEvent(id);\r\n\r\n            this.setState({internalServerError: false, notFound404Error: false});\r\n            this.props.onDelete(id);\r\n        }\r\n        catch ( error ) {\r\n            if ( error.response.status === 500 ) {\r\n                this.setState({internalServerError: true});\r\n            }\r\n            else if (error.response.status === 404) {\r\n                this.setState({notFound404Error: true});\r\n            }\r\n            else {\r\n                console.error('Unhandled error')\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const { title, start, end, description } = this.props.event;\r\n        const { internalServerError, notFound404Error } = this.state;\r\n\r\n        const startStr: string = DateTime.fromJSDate(start).toFormat('MMMM dd, h:mm a');\r\n        const endStr: string = DateTime.fromJSDate(end).toFormat('h:mm a');\r\n        const dateTimeStr: string = `${startStr} - ${endStr}`;\r\n\r\n        return (\r\n            <div className=\"grayout\">\r\n                <div className=\"view-event-dialog\">\r\n                    <div className=\"view-dialog-header\">\r\n                        <div className=\"primary-header\">{title}</div>\r\n                        <div className=\"secondary-header\">{dateTimeStr}</div>\r\n                    </div>\r\n                    <div className=\"location-img-container\">\r\n                        <img className=\"location-img\" src={churchImg} alt=\"greater grace church\" />\r\n                    </div>\r\n                    <div className=\"view-dialog-body\">\r\n                        <div className=\"event-description\">{description}</div>\r\n                        <div className=\"actions-container\">\r\n                            <Button onClick={this.handleDelete } className=\"delete-event-icon\" variant=\"outlined\" endIcon={<DeleteIcon color=\"primary\" />}>\r\n                                <div className=\"delete-txt\">Delete</div>\r\n                            </Button>\r\n                            <Button className=\"edit-event-icon\" variant=\"outlined\" endIcon={<EditIcon color=\"primary\" />}>\r\n                                <div className=\"edit-txt\">Edit</div>\r\n                            </Button>\r\n                            <Button onClick={ this.handleCancel } className=\"close-event-dialog\" variant=\"outlined\" endIcon={<CloseIcon color=\"primary\" />}>Done</Button>\r\n                        \r\n                            <FormHelperText className={`delete-err ${notFound404Error ? \"\" : \"display-none\"}`} error={true}>Uh-oh! A problem occured. The event may have already been deleted. Please refresh the page and try again.</FormHelperText>\r\n                            <FormHelperText className={`delete-err ${internalServerError ? \"\" : \"display-none\"}`} error={true}>Uh-oh! A problem occured. Please refresh the page and try again.</FormHelperText>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewEventDialog;","import React  from 'react';\r\n\r\nimport './ErrorBox.css';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\n\r\n// TODO: Make functional component\r\n\r\ntype ErrorBoxState = {}\r\n\r\ntype ErrorBoxProps = {\r\n    message: string\r\n}\r\n\r\nclass ErrorBox extends React.Component<ErrorBoxProps, ErrorBoxState> {\r\n    constructor(props: ErrorBoxProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"error-box\">\r\n                <ErrorIcon color=\"error\"/>\r\n                <div className=\"error-msg\">{this.props.message}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ErrorBox;","import React from 'react';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { DateTime } from 'luxon';\r\n\r\nimport { Calendar, luxonLocalizer } from 'react-big-calendar';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nimport AddEventDialog from './AddEventDialog';\r\n\r\nimport ViewEventDialog from './ViewEventDialog';\r\n\r\nimport ErrorBox from './ErrorBox';\r\n\r\nimport Event from '../models/Event';\r\n\r\n\r\nimport './Schedule.css';\r\n\r\n// TODO: rename this maybe?\r\nimport * as eventAPI from '../api/event';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\n\r\ntype ScheduleProps = {};\r\ntype ScheduleState = {\r\n    currentEvent: Event | null,\r\n    addEventDialogOpen: boolean,\r\n    events: any,\r\n    eventsLoaded: boolean,\r\n    errorLoadingEvents: boolean,\r\n    deleteEventSnackbarOpen: boolean,\r\n    successAddEventSnackbarOpen: boolean,\r\n};\r\n\r\n\r\n\r\nclass Schedule extends React.Component<ScheduleProps, ScheduleState> {\r\n    constructor(props: ScheduleProps) {\r\n        super(props);\r\n\r\n        this.state = { \r\n            currentEvent: null,\r\n            addEventDialogOpen:\r\n            false, events: [],\r\n            eventsLoaded: false,\r\n            errorLoadingEvents: false,\r\n            deleteEventSnackbarOpen: false,\r\n            successAddEventSnackbarOpen: false\r\n            \r\n        };\r\n\r\n        this.eventClicked = this.eventClicked.bind(this);\r\n\r\n        this.eventDeleted = this.eventDeleted.bind(this);\r\n\r\n        this.eventAdded = this.eventAdded.bind(this);\r\n\r\n        this.openViewEventDialog = this.openViewEventDialog.bind(this);\r\n        this.closeViewEventDialog = this.closeViewEventDialog.bind(this);\r\n\r\n        this.openAddEventDialog = this.openAddEventDialog.bind(this);\r\n        this.closeAddEventDialog = this.closeAddEventDialog.bind(this);\r\n\r\n        this.handleCloseAddEventSnackbar = this.handleCloseAddEventSnackbar.bind(this);\r\n        this.handleUndoAddEvent = this.handleUndoAddEvent.bind(this);\r\n\r\n        this.handleCloseDeleteEventSnackbar = this.handleCloseDeleteEventSnackbar.bind(this);\r\n        this.handleUndoDeleteEvent = this.handleUndoDeleteEvent.bind(this);\r\n    }\r\n\r\n    async componentWillMount() {\r\n        this.loadEvents();\r\n    }\r\n\r\n    async loadEvents() {\r\n        try {\r\n            // TODO: Types\r\n            var result = await eventAPI.getEvents();\r\n            var events: any = result.data;\r\n\r\n            //TODO: Type\r\n            events.forEach((event: any) => {\r\n                event.start = DateTime.fromISO(event.start).toJSDate();\r\n                event.end = DateTime.fromISO(event.end).toJSDate();\r\n            });\r\n\r\n            this.setState({events , eventsLoaded: true });\r\n        }\r\n        catch(e) {\r\n            console.error(\"error=\",e)\r\n            this.setState({errorLoadingEvents: true});\r\n        }\r\n    }\r\n\r\n    eventClicked(event: Event, e: any /*: SyntheticEvent*/) {\r\n        this.openViewEventDialog(event);\r\n    }\r\n\r\n    openViewEventDialog(event: Event) {\r\n        this.setState({currentEvent: event});\r\n    }\r\n\r\n    closeViewEventDialog() {\r\n        this.setState({currentEvent: null});\r\n    }\r\n\r\n    openAddEventDialog() {\r\n        this.setState({addEventDialogOpen: true});\r\n    }\r\n\r\n    closeAddEventDialog() {\r\n        this.setState({ addEventDialogOpen: false});\r\n    }\r\n\r\n    handleCloseDeleteEventSnackbar(event: React.SyntheticEvent<any>) {\r\n        this.setState({deleteEventSnackbarOpen: false})\r\n    }\r\n\r\n    handleUndoAddEvent(event: React.SyntheticEvent<any>) {\r\n        // TODO:\r\n    }\r\n\r\n    handleCloseAddEventSnackbar(event: React.SyntheticEvent<any>) {\r\n        this.setState({successAddEventSnackbarOpen: false})\r\n    }\r\n\r\n    handleUndoDeleteEvent(event: React.SyntheticEvent<any>) {\r\n        // TODO:\r\n    }\r\n\r\n    eventDeleted(id: number) {\r\n        let events: Event[] = this.state.events;\r\n        events = events.filter(event => event.id != id);\r\n\r\n        this.setState({events, deleteEventSnackbarOpen: true});\r\n\r\n        this.closeViewEventDialog();\r\n    }\r\n\r\n    eventAdded(event: Event) {  // TODO: Type\r\n        let events: any = this.state.events;\r\n        events.push(event);\r\n        \r\n        this.setState({events, successAddEventSnackbarOpen: true})\r\n        \r\n        this.closeAddEventDialog();\r\n    }\r\n\r\n    render() {\r\n        const localizer = luxonLocalizer(DateTime);\r\n        var that: any = this;\r\n\r\n        var events = this.state.events;\r\n\r\n        const { successAddEventSnackbarOpen, deleteEventSnackbarOpen, currentEvent, addEventDialogOpen, eventsLoaded, errorLoadingEvents } = this.state;\r\n        \r\n        function calendar() {\r\n            if (eventsLoaded) {\r\n                return (\r\n                    <Calendar\r\n                    localizer={localizer}\r\n                    events={events}\r\n                    style={{ height: 500 }}\r\n                    onSelectEvent={that.eventClicked}\r\n                    />\r\n                );\r\n            }\r\n\r\n            return (null);\r\n        }\r\n\r\n        function spinner() {\r\n            if ( !eventsLoaded && !errorLoadingEvents) {\r\n                return (\r\n                    <div className=\"spinner-container\">\r\n                        <CircularProgress size=\"4rem\" color=\"primary\"/>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return (null);\r\n        }\r\n\r\n        function loadingError() {\r\n            if ( errorLoadingEvents ) {\r\n                return (\r\n                    <ErrorBox message=\"Couldn't load events!\" />\r\n                );\r\n            }\r\n\r\n            return (null);\r\n        }\r\n\r\n        function viewEventDialog() {\r\n            if (currentEvent) {\r\n                return (\r\n                    <ViewEventDialog onDelete={that.eventDeleted} event={currentEvent} onCancel={that.closeViewEventDialog} />\r\n                );\r\n            }\r\n        }\r\n\r\n        function addEventDialog() {\r\n            if (addEventDialogOpen) {\r\n                return (\r\n                    <AddEventDialog onEventAdded={that.eventAdded} onCancel={that.closeAddEventDialog} />\r\n                );\r\n            }\r\n\r\n            return (null);\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"page-container\">\r\n                <div className=\"page\">\r\n                    <Typography className=\"page-header\" color=\"primary\" variant=\"h3\">Upcoming Events</Typography>\r\n\r\n                    {calendar()}\r\n                    {loadingError()}\r\n                    {spinner()}\r\n                    {viewEventDialog()}\r\n                    {addEventDialog()}\r\n                    \r\n                    <Fab onClick={this.openAddEventDialog} className=\"add-event\" size=\"medium\"  aria-label=\"Add Event\" >\r\n                        <AddIcon color=\"primary\" />\r\n                    </Fab>\r\n                </div>\r\n                \r\n                <Snackbar\r\n                    open={successAddEventSnackbarOpen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.handleCloseAddEventSnackbar}\r\n                    message=\"Event Added\"\r\n                    action={\r\n                        <React.Fragment>\r\n                            <Button color=\"secondary\" size=\"small\" onClick={this.handleUndoAddEvent}>UNDO</Button>\r\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"secondary\" onClick={this.handleCloseAddEventSnackbar}>\r\n                                <CloseIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </React.Fragment>\r\n                    }\r\n                />\r\n\r\n                <Snackbar\r\n                    open={deleteEventSnackbarOpen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.handleCloseDeleteEventSnackbar}\r\n                    message=\"Event Deleted\"\r\n                    action={\r\n                        <React.Fragment>\r\n                            <Button color=\"secondary\" size=\"small\" onClick={this.handleUndoDeleteEvent}>UNDO</Button>\r\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"secondary\" onClick={this.handleCloseDeleteEventSnackbar}>\r\n                                <CloseIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </React.Fragment>\r\n                    }\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Schedule;","// TODO: Should I rename this?\r\n\r\nimport axios from 'axios';\r\n\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\n// TODO: Return type\r\nexport const register = (email: string, password: string) => {\r\n    return axios.post('/api/users', {\r\n        email, password\r\n    });\r\n}\r\n\r\nexport const login = (email: string, password: string) => {\r\n    return axios.post('/api/users/login', {\r\n        email, password\r\n    });\r\n}\r\n\r\nexport const logout = () => {\r\n    return axios.delete('/api/users/logout');\r\n}\r\n\r\nexport const hasLoginCookie = (): boolean => {\r\n    const cookies: Cookies = new Cookies();\r\n    return cookies.get('jwt') ? true : false;\r\n}","import React, { Component } from \"react\";\r\nimport * as auth from '../api/auth';\r\n\r\nconst { Provider, Consumer } = React.createContext();\r\n\r\nclass AuthContextProvider extends Component {\r\n  state = {\r\n    isLoggedIn: auth.hasLoginCookie()\r\n  };\r\n\r\n  login = () => {\r\n    this.setState({ isLoggedIn: true})\r\n  };\r\n\r\n  logout = () => {\r\n    this.setState({ isLoggedIn: false})\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Provider value={{ isLoggedIn: this.state.isLoggedIn, login: this.login, logout: this.logout }}>\r\n        {this.props.children}\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport { AuthContextProvider, Consumer as AuthContextConsumer };\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\nimport DoneIcon from '@material-ui/icons/Done';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport * as auth from '../api/auth';\r\n\r\nimport './AccountSettings.css';\r\n\r\n\r\nimport { AuthContextConsumer } from '../contexts/authContext';\r\n\r\ntype AccountSettingsState = {}\r\n\r\ntype AccountSettingsProps = {\r\n    history: any;\r\n}\r\n\r\nclass AccountSettings extends React.Component<AccountSettingsProps, AccountSettingsState> {\r\n    constructor(props: AccountSettingsProps) {\r\n        super(props);\r\n    }\r\n\r\n    handleLogout(callback: any) {\r\n        try {\r\n            auth.logout();\r\n\r\n            callback();\r\n\r\n            this.props.history.push('/login');\r\n        }\r\n        catch(error) {\r\n            console.log('error',error)\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"page-container\">\r\n                <div className=\"page\">\r\n                    <Typography className=\"page-header\" color=\"primary\" variant=\"h3\">Account Settings</Typography>\r\n\r\n                    <div style={{width: '100%'}}>\r\n                        <div className=\"field-container\">\r\n                            <div className=\"field-name\">First Name</div>\r\n\r\n                            <div className=\"field-value\">Brian</div>\r\n\r\n                            <div className=\"edit-field-icon-btn-container\">\r\n                                <IconButton className=\"edit-field-icon-btn\" aria-label=\"edit\" disabled color=\"primary\">\r\n                                    <EditIcon className=\"edit-field-icon\" />\r\n                                </IconButton>\r\n                                <div className=\"edit-label\">Change</div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Divider />\r\n\r\n                        <div className=\"field-container\">  \r\n                            <div className=\"field-name\">Last Name</div>\r\n                            \r\n                            <div className=\"field-value\">Albin</div>\r\n\r\n                            <div className=\"edit-field-icon-btn-container\">\r\n                                <IconButton className=\"edit-field-icon-btn\" aria-label=\"edit\" disabled color=\"primary\">\r\n                                    <EditIcon className=\"edit-field-icon\" />\r\n                                </IconButton>\r\n                                <div className=\"edit-label\">Change</div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Divider />\r\n\r\n                        <div className=\"field-container\"> \r\n                            <div className=\"field-name\">Email</div>\r\n                            \r\n                            <div className=\"field-value\">brianalbin3taco@gmail.com</div>\r\n\r\n                            <div className=\"edit-field-icon-btn-container\">\r\n                                <IconButton className=\"edit-field-icon-btn\" aria-label=\"edit\" disabled color=\"primary\">\r\n                                    <EditIcon className=\"edit-field-icon\" />\r\n                                </IconButton>\r\n                                <div className=\"edit-label\">Change</div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <AuthContextConsumer>\r\n                    {context => (\r\n                        <Button onClick={ e => this.handleLogout(context.logout)} className=\"auth-btn\" variant=\"contained\" color=\"primary\" size=\"medium\">Logout</Button>\r\n                    )}\r\n                    </AuthContextConsumer>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AccountSettings;","import './Splash.css';\r\n\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n// TODO: move typography font-weight: 400 to theme\r\nfunction Splash() {\r\n    return (\r\n      <div className=\"landing-page-container\">\r\n        <div className=\"info-box\">\r\n          <Typography className=\"splash-header\" color=\"primary\" variant=\"h1\">Homeless Helper</Typography>\r\n          <div className=\"description\">Helping you organize your missionary work for the homeless one page at a time.</div>\r\n          <Link className=\"no-underline\" to=\"/features/schedule\">\r\n            <Button variant=\"contained\" color=\"primary\" className=\"start-btn\">Get Started</Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default Splash;","import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport PasswordInput from './PasswordInput';\r\n\r\nimport * as auth from '../api/auth';\r\n\r\nimport { AuthContextConsumer } from '../contexts/authContext';\r\n\r\n\r\nimport './Login.css';\r\n\r\nenum LoginFailureType {\r\n    BAD_EMAIL_PASSWORD,\r\n    INTERNAL_SERVER_ERROR,\r\n    ACCOUNT_LOCKED,\r\n    NONE\r\n}\r\n\r\ntype LoginState = {\r\n    email: string,\r\n    password: string,\r\n    submitIsTouched: boolean,\r\n    loginFailureType: LoginFailureType\r\n}\r\n\r\ntype LoginProps = {\r\n    history: any // TODO: Fix this type\r\n}\r\n\r\nclass Login extends React.Component<LoginProps, LoginState> {\r\n    constructor(props: LoginProps) {\r\n        super(props);\r\n\r\n        this.state = { email: '', password: '', submitIsTouched: false, loginFailureType: LoginFailureType.NONE };\r\n        \r\n        this.handleEmailChange = this.handleEmailChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this); \r\n    }\r\n\r\n    handleEmailChange(e: any) {\r\n        const email = e.target.value;\r\n        this.setState({email});\r\n    }\r\n\r\n    emailHasError(): boolean {\r\n        const { email, submitIsTouched } = this.state;\r\n        return email.length === 0 && submitIsTouched;\r\n    }\r\n    \r\n    handlePasswordChange(e: any) {\r\n        const password = e.target.value;\r\n        this.setState({password});\r\n    }\r\n\r\n    passwordHasError(): boolean {\r\n        const { password, submitIsTouched } = this.state;\r\n        return password.length === 0 && submitIsTouched;\r\n    }\r\n\r\n    hasFormError(): boolean {\r\n        return this.state.loginFailureType !== LoginFailureType.NONE;\r\n    }\r\n\r\n    getFormErrorText() {\r\n        if (this.state.loginFailureType === LoginFailureType.BAD_EMAIL_PASSWORD) {\r\n            return 'The password you’ve entered is incorrect.';\r\n        }\r\n        else if ( this.state.loginFailureType === LoginFailureType.INTERNAL_SERVER_ERROR ) {\r\n            return 'Uh-oh! A problem occured. Please refresh the page and try again.';\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    async handleSubmit(callback: any) {\r\n        const { email, password } = this.state;\r\n\r\n        this.setState({submitIsTouched: true, loginFailureType: LoginFailureType.NONE});\r\n\r\n        if ( email.length === 0 || password.length === 0 ) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await auth.login(email,password);\r\n            \r\n            callback();\r\n            \r\n            this.props.history.push('/features/schedule');\r\n        }\r\n        catch ( error ) {\r\n            if ( error.response.status === 401 ) {\r\n                if ( error.response.data.message === 'Email or password is incorrect' ) { // Keep text same as client\r\n                    this.setState({loginFailureType: LoginFailureType.BAD_EMAIL_PASSWORD});\r\n                }\r\n                else if ( error.response.data.message === 'Account locked' ) { // Keep text same as server\r\n                    this.setState({loginFailureType: LoginFailureType.ACCOUNT_LOCKED});\r\n                }\r\n                else {\r\n                    console.error(\"Unknown 401 status code response\", error);\r\n                }\r\n            }\r\n            else if ( error.response.status === 500 ) {\r\n                this.setState({loginFailureType: LoginFailureType.INTERNAL_SERVER_ERROR});\r\n            }\r\n            else {\r\n                console.error('Unhandled error'); // TODO: Handle this\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if ( this.state.loginFailureType === LoginFailureType.ACCOUNT_LOCKED ) {\r\n            return (<Redirect to=\"/findaccount\"/>);\r\n        }\r\n\r\n        return (\r\n            <div className=\"auth-page-container\">\r\n                <div className=\"auth-page\">\r\n                    <Typography className=\"auth-header\" color=\"primary\" variant=\"h4\">Login to Your Account</Typography>\r\n                    <form className=\"auth-form\">\r\n                        <TextField onChange={this.handleEmailChange} className=\"auth-txt-field\" label=\"Email\" variant=\"filled\" error={this.emailHasError()} helperText=\"Enter your email\"/>\r\n                        <PasswordInput onChange={this.handlePasswordChange} inputProps={{ maxLength: 32 }} className=\"auth-txt-field\" error={this.passwordHasError()} helperText=\"Enter your password\" label=\"Password\"/>\r\n                        <AuthContextConsumer>\r\n                        {context => (\r\n                            <Button onClick={ e => this.handleSubmit(context.login)} className=\"auth-btn\" variant=\"contained\" color=\"primary\" size=\"medium\">Login</Button>\r\n                        )}\r\n                        </AuthContextConsumer>\r\n                        <FormHelperText className={`auth-err ${this.hasFormError() ? \"\" : \"display-none\"}`} error={true}>{this.getFormErrorText()}</FormHelperText>\r\n                        <div className=\"non-important-btns-container\">\r\n                            <Link className=\"no-underline\" to=\"/register\">\r\n                                <Button className=\"non-important-btn\" color=\"primary\">Create Account</Button>\r\n                            </Link>\r\n                            <Link className=\"no-underline\" to=\"/findaccount\">\r\n                                <Button className=\"non-important-btn\" color=\"primary\">Forgot Password?</Button>\r\n                            </Link>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import { InputAdornment } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport React, {Component } from 'react';\r\n\r\nimport './PasswordInput.css';\r\n\r\ntype PasswordInputState = {\r\n    passwordIsMasked: boolean\r\n}\r\n\r\n//https://itnext.io/building-a-toggled-mask-password-input-component-w-react-and-material-ui-f55e6bd73434\r\n\r\n\r\ntype PasswordInputProps = {\r\n    classes?: any,\r\n    onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n    value?: string,\r\n    error?: boolean,\r\n    helperText?: string,\r\n    label?: string,\r\n    className?: string,\r\n    inputProps?: object,\r\n}\r\n\r\nclass PasswordInput extends Component<PasswordInputProps, PasswordInputState> {\r\n    constructor(props: PasswordInputProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            passwordIsMasked: true\r\n        };\r\n    }\r\n\r\n    togglePasswordMask = () => {\r\n        this.setState(prevState => ({\r\n            passwordIsMasked: !prevState.passwordIsMasked\r\n        }));\r\n    }\r\n\r\n    getVisibilityIcon() {\r\n        if ( this.state.passwordIsMasked ) {\r\n            return (\r\n                <VisibilityIcon color=\"primary\" onClick={this.togglePasswordMask} className=\"clickable-icon\"/>\r\n            );\r\n        }\r\n        \r\n        return (\r\n            <VisibilityOffIcon color=\"primary\" onClick={this.togglePasswordMask} className=\"clickable-icon\"/>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { passwordIsMasked } = this.state;\r\n\r\n        return (\r\n            <TextField\r\n                variant=\"filled\"\r\n                type={passwordIsMasked ? 'password' : 'text'}\r\n                {...this.props}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            {this.getVisibilityIcon()}\r\n                        </InputAdornment>\r\n                    ),\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default PasswordInput;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport * as userAPI from '../api/user';\r\n\r\nimport './FindAccount.css';\r\n\r\ntype FindAccountState = {\r\n    contact: string,\r\n    searchAccountFailureType: SearchAccountFailureType,\r\n    submitIsTouched: boolean\r\n}\r\n\r\ntype FindAccountProps = {\r\n    history: any\r\n}\r\n\r\nenum SearchAccountFailureType {\r\n    ACCOUNT_NOT_FOUND,\r\n    INTERNAL_SERVER_ERROR,\r\n    NONE\r\n}\r\n\r\nclass FindAccount extends React.Component<FindAccountProps, FindAccountState> {\r\n\r\n    constructor(props: FindAccountProps) {\r\n        super(props);\r\n\r\n        this.state = { contact: '', searchAccountFailureType: SearchAccountFailureType.NONE, submitIsTouched: false };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleContactChange = this.handleContactChange.bind(this);\r\n    }\r\n\r\n    handleContactChange(e: any) {\r\n        const contact = e.target.value;\r\n        this.setState({contact});\r\n    }\r\n\r\n    contactHasError(): boolean {\r\n        const { submitIsTouched, contact } = this.state;\r\n\r\n        return contact.length === 0 && submitIsTouched;\r\n    }\r\n\r\n    async handleSubmit(e: any) {\r\n        const { contact } = this.state;\r\n\r\n        this.setState({submitIsTouched: true});\r\n\r\n        if ( contact.length === 0 ) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const contactInfo: any = await (await userAPI.findAccount(contact)).data.contactInformation; // TODO: Create model for this\r\n            console.log(\"contactInfo\",contactInfo)\r\n            this.setState({searchAccountFailureType: SearchAccountFailureType.NONE, submitIsTouched: false});\r\n            this.props.history.push(`/pickresetmethod?email=${contactInfo.email}&phone=${contactInfo.phone}`); // TODO: Change this\r\n        }\r\n        catch(error) {\r\n            if ( error.response.status === 404 ) {\r\n                this.setState({searchAccountFailureType: SearchAccountFailureType.ACCOUNT_NOT_FOUND});\r\n            }\r\n            else if ( error.response.status === 500 ) {\r\n                this.setState({searchAccountFailureType: SearchAccountFailureType.INTERNAL_SERVER_ERROR});\r\n            }\r\n        }\r\n    }\r\n\r\n    displayFormError(): boolean {\r\n        return this.state.searchAccountFailureType !== SearchAccountFailureType.NONE;\r\n    }\r\n\r\n    getFormErrorText(): string {\r\n        if ( this.state.searchAccountFailureType === SearchAccountFailureType.ACCOUNT_NOT_FOUND ) {\r\n            return 'We couldnt find an account with that contact information.';\r\n        }\r\n        else if ( this.state.searchAccountFailureType === SearchAccountFailureType.INTERNAL_SERVER_ERROR ) {\r\n            return 'Internal error. Refresh the page.';\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    // TODO: auth-err really should be renamed\r\n    render() {\r\n        return (\r\n            <div className=\"auth-page-container\">\r\n                <div className=\"auth-page\">\r\n                    <Typography className=\"auth-header\" color=\"primary\" variant=\"h4\">Find Account</Typography>\r\n                    <form className=\"auth-form\">\r\n                        <FormHelperText className=\"forgot-pw-desc\">Enter your email or phone number to search for your account.</FormHelperText>\r\n                        <TextField onChange={this.handleContactChange} className=\"auth-txt-field\" label=\"Email or Phone\" variant=\"filled\" error={this.contactHasError()} helperText=\"Enter your email or phone number\"/>\r\n                        <Button onClick={ this.handleSubmit } className=\"auth-btn\" variant=\"contained\" color=\"primary\" size=\"medium\">Search</Button>\r\n                        <FormHelperText className={`auth-err ${this.displayFormError() ? \"\" : \"display-none\"}`} error={true}>{this.getFormErrorText()}</FormHelperText>\r\n                    </form>\r\n                    <div className=\"non-important-btns-container\">\r\n                        <Link className=\"no-underline\" to=\"/login\">\r\n                            <Button className=\"find-email-btn non-important-btn\" color=\"primary\">Cancel</Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FindAccount;","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport PasswordInput from './PasswordInput';\r\n\r\n\r\n\r\nimport * as auth from '../api/auth';\r\n\r\nimport { AuthContextConsumer } from '../contexts/authContext';\r\n\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nimport './Register.css';\r\n\r\ntype RegisterState = {\r\n    email: string,\r\n    password: string,\r\n    passwordIsTouched: boolean,\r\n    submitIsTouched: boolean,\r\n    emailIsTaken: boolean,\r\n    internalServerError: boolean\r\n}\r\n\r\ntype RegisterProps = {\r\n    history: any // TODO: Type\r\n}\r\n\r\nclass Register extends React.Component<RegisterProps, RegisterState> {\r\n    constructor(props: RegisterProps) {\r\n        super(props);\r\n\r\n        this.state = { email: '', password: '', passwordIsTouched: false, submitIsTouched: false, emailIsTaken: false, internalServerError: false };\r\n        \r\n        this.handleEmailChange = this.handleEmailChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this); \r\n    }\r\n\r\n    handleEmailChange(e: any) {\r\n        const email = e.target.value;\r\n        this.setState({email, emailIsTaken: false});\r\n    }\r\n\r\n    isValidEmail(): boolean {\r\n        const email = this.state.email;\r\n\r\n        const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n        return regex.test(email);\r\n    }\r\n\r\n    passwordHasCorrectLength(): boolean {\r\n        const password = this.state.password;\r\n\r\n        return password.length >= 8 && password.length <= 32;\r\n    }\r\n\r\n    // TODO: FIX THIS\r\n    // Checks if the password contains numbers, letters, and special characters\r\n    passwordIsValid(): boolean {\r\n        const password = this.state.password;\r\n\r\n        const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[^\\da-zA-Z]).{8,32}$/\r\n\r\n        return regex.test(password);\r\n    }\r\n\r\n    handlePasswordChange(e: any) {\r\n        const password = e.target.value;\r\n        this.setState({password, passwordIsTouched: true});\r\n    }\r\n\r\n    emailHasError(): boolean {\r\n        const { submitIsTouched } = this.state;\r\n\r\n        return !this.isValidEmail() && submitIsTouched;\r\n    }\r\n\r\n    getEmailHelperText(): string {\r\n        if ( this.emailHasError() ) {\r\n            return 'Please enter a valid email';\r\n        }\r\n        else if ( this.state.emailIsTaken ) {\r\n            return 'This email is taken, try another.';\r\n        }\r\n        \r\n        return 'Enter your email';\r\n    }\r\n\r\n    passwordHasError(): boolean {\r\n        const { submitIsTouched } = this.state;\r\n\r\n        return !this.passwordIsValid() && submitIsTouched;\r\n    }\r\n\r\n    getPasswordHelperText(): string {\r\n        if ( !this.passwordHasError() ) {\r\n            return 'Enter a password';\r\n        }\r\n        else if ( this.passwordHasCorrectLength() ) {\r\n            return 'Enter between 8 and 32 characters';\r\n        }\r\n    \r\n        return 'Include a letter, number, and special character';\r\n    }\r\n\r\n    hasInternalServerError(): boolean {\r\n        return this.state.internalServerError;\r\n    }\r\n\r\n    async handleSubmit(callback: any) {\r\n        const { email, password } = this.state;\r\n\r\n        this.setState({submitIsTouched: true, internalServerError: false});\r\n\r\n        if ( !this.isValidEmail() || !this.passwordIsValid() ) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await auth.register(email,password);\r\n            \r\n            callback();\r\n   \r\n            this.props.history.push('/features/schedule');\r\n        }\r\n        catch ( error ) {\r\n            if ( error.response.status === 409 ) {\r\n                this.setState({emailIsTaken: true});\r\n            }\r\n            else if ( error.response.status === 500 ) {\r\n                this.setState({internalServerError: true});\r\n            }\r\n            else {\r\n                console.error('Unhandled error'); // TODO: Handle this\r\n            }\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return (\r\n            <div className=\"auth-page-container\">\r\n                <div className=\"auth-page\">\r\n                    <Typography className=\"auth-header\" color=\"primary\" variant=\"h4\">Create a New Account</Typography>\r\n                    <form className=\"auth-form\">\r\n                        <TextField onChange={this.handleEmailChange} name=\"email\" className=\"auth-txt-field\" label=\"Email\" variant=\"filled\" error={this.emailHasError() || this.state.emailIsTaken} helperText={this.getEmailHelperText()}/>\r\n                        <PasswordInput inputProps={{ maxLength: 32 }} onChange={this.handlePasswordChange} className=\"auth-txt-field\" label=\"Password\" error={this.passwordHasError()} helperText={this.getPasswordHelperText()} />\r\n                        <AuthContextConsumer>\r\n                        {context => (\r\n                            <Button onClick={e => this.handleSubmit(context.login)} className=\"auth-btn\" variant=\"contained\" color=\"primary\" size=\"medium\">Register</Button>\r\n                        )}\r\n                        </AuthContextConsumer>\r\n                        <FormHelperText className={`auth-err ${this.hasInternalServerError() ? \"\" : \"display-none\"}`} error={true}>Uh-oh! A problem occured. Please refresh the page and try again.</FormHelperText>\r\n                        <div className=\"non-important-btns-container\">\r\n                            <Link className=\"no-underline\" to=\"/login\">\r\n                                <Button className=\"already-registered-btn non-important-btn\" color=\"primary\">Already Have an Account?</Button>\r\n                            </Link>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport const findAccount = (account: string) => {\r\n    return axios.get(`/api/users/findaccount/${account}`);\r\n}\r\n\r\n\r\nexport const sendResetCode = (email: string, selectedContactMethod: string) => {\r\n    return axios.post('/api/users/sendresetcode', {\r\n        email, selectedContactMethod\r\n    });\r\n}\r\n\r\nexport const checkResetCode = (email: string, resetCode: string) => {\r\n    return axios.get('/api/users/checkresetcode', {\r\n\r\n        params: {\r\n            email,\r\n            resetCode\r\n            }\r\n    });\r\n}\r\n\r\nexport const changePassword = (email: string, password: string, resetCode: string) => {\r\n    return axios.post('/api/users/changepassword', {\r\n        email,\r\n        password,\r\n        resetCode\r\n    });\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Radio from '@material-ui/core/Radio';\r\n\r\nimport qs from 'qs';\r\n\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\n\r\nimport * as userAPI from '../api/user';\r\n\r\nimport './PickResetMethod.css';\r\n\r\ntype PickResetMethodState = {\r\n    email: string,\r\n    phone: string,\r\n    selectedContactMethod: string,\r\n    pickResetMethodFailureType: PickResetMethodFailureType,\r\n}\r\n\r\ntype PickResetMethodProps = {\r\n    location: any, // TODO: params\r\n    history: any // TODO: type\r\n}\r\n\r\nenum PickResetMethodFailureType {\r\n    ACCOUNT_NOT_FOUND,\r\n    INTERNAL_SERVER_ERROR,\r\n    NONE\r\n}\r\n\r\nclass PickResetMethod extends React.Component<PickResetMethodProps, PickResetMethodState> {\r\n\r\n    constructor(props: PickResetMethodProps) {\r\n        super(props);\r\n\r\n        let email: any = '';\r\n        let phone: any = '';\r\n\r\n        if (qs.parse(this.props.location.search, { ignoreQueryPrefix: true })) {\r\n            email = qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).email;\r\n            phone = qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).phone;\r\n        }\r\n\r\n        this.state = { email, selectedContactMethod: 'email', phone, pickResetMethodFailureType: PickResetMethodFailureType.NONE };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n        this.setState({ selectedContactMethod: e.target.value });\r\n    }\r\n\r\n    displayFormError(): boolean {\r\n        return this.state.pickResetMethodFailureType !== PickResetMethodFailureType.NONE;\r\n    }\r\n\r\n    getFormErrorText(): string {\r\n        if (this.state.pickResetMethodFailureType === PickResetMethodFailureType.ACCOUNT_NOT_FOUND) {\r\n            return 'We couldnt find that email.';\r\n        }\r\n        else if (this.state.pickResetMethodFailureType === PickResetMethodFailureType.INTERNAL_SERVER_ERROR) {\r\n            return 'Internal error. Refresh the page.';\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    async handleSubmit(e: any) {\r\n        try {\r\n            const { email, phone, selectedContactMethod } = this.state;\r\n\r\n            this.setState({ pickResetMethodFailureType: PickResetMethodFailureType.NONE });\r\n\r\n            await userAPI.sendResetCode(email, selectedContactMethod);\r\n\r\n            this.props.history.push(`/entercode?email=${email}&phone=${phone}&selectedContactMethod=${selectedContactMethod}`);\r\n        }\r\n        catch (error) {\r\n            if (error.response.status === 404) {\r\n                this.setState({ pickResetMethodFailureType: PickResetMethodFailureType.ACCOUNT_NOT_FOUND }); // This should never actually happen, do we really need it?\r\n            }\r\n            else if (error.response.status === 500) {\r\n                this.setState({ pickResetMethodFailureType: PickResetMethodFailureType.INTERNAL_SERVER_ERROR });\r\n            }\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const { email, phone } = this.state;\r\n\r\n        let emailOption = (\r\n            <div>\r\n                <div className=\"contact\">\r\n                    <div>\r\n                        <div className=\"contact-method\">Send Code Via Email</div>\r\n                        <div className=\"contact-detail\">{this.state.email}</div>\r\n                    </div>\r\n                    <div className=\"radio-container\">\r\n                        <Radio color=\"primary\" checked={this.state.selectedContactMethod === 'email'} onChange={this.handleChange} value=\"email\" />\r\n                    </div>\r\n                </div>\r\n                <Divider className=\"contact-divider\" />\r\n            </div>\r\n        );\r\n\r\n        let phoneOption = (\r\n            <div>\r\n                <div className=\"contact\">\r\n                    <div>\r\n                        <div className=\"contact-method\">Send Code Via SMS</div>\r\n                        <div className=\"contact-detail\">{this.state.phone}</div>\r\n                    </div>\r\n                    <div className=\"radio-container\">\r\n                        <Radio color=\"primary\" checked={this.state.selectedContactMethod === 'phone'} onChange={this.handleChange} value=\"phone\" />\r\n                    </div>\r\n                </div>\r\n                <Divider className=\"contact-divider\" />\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div className=\"auth-page-container\">\r\n                <div className=\"auth-page\">\r\n                    <Typography className=\"auth-header\" color=\"primary\" variant=\"h4\">Pick Reset Method</Typography>\r\n                    <form className=\"auth-form\">\r\n                        <Paper elevation={1} className=\"find-account-icon-container\">\r\n                            <AccountCircle color=\"primary\" className=\"find-account-icon\" />\r\n                            <div>{this.state.email}</div>\r\n                        </Paper>\r\n                        <div className=\"auth-instructions desktop-only\">Select how you would like to recieve the code to reset your password.</div>\r\n                        <Divider className=\"contact-divider\" />\r\n                        {email && emailOption}\r\n                        {phone && phoneOption}\r\n                        <Button onClick={this.handleSubmit} className=\"auth-btn\" variant=\"contained\" color=\"primary\" size=\"medium\">Send Code</Button>\r\n                        <FormHelperText className={`auth-err ${this.displayFormError() ? \"\" : \"display-none\"}`} error={true}>{this.getFormErrorText()}</FormHelperText>\r\n                    </form>\r\n                    <div className=\"non-important-btns-container\">\r\n                        <Link className=\"no-underline\" to=\"/findaccount\">\r\n                            <Button className=\"find-email-btn non-important-btn\" color=\"primary\">Not You?</Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PickResetMethod;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\n\r\nimport qs from 'qs';\r\n\r\nimport * as userAPI from '../api/user';\r\n\r\nimport './EnterCode.css';\r\n\r\nenum EnterCodeStatusType {\r\n    NONE,\r\n    INVALID_PASSCODE,\r\n    CODE_EXPIRED,\r\n    TOO_MANY_ATTEMPTS,\r\n    INTERNAL_SERVER_ERROR,\r\n    RESENT_CODE\r\n}\r\n\r\ntype EnterCodeState = {\r\n    selectedContactMethod: string,\r\n    email: string,\r\n    phone: string,\r\n    submitIsTouched: boolean,\r\n    code: string,\r\n    enterCodeStatusType: EnterCodeStatusType\r\n}\r\n\r\ntype EnterCodeProps = {\r\n    location: any, // TODO: type\r\n    history: any, // TODO: type\r\n}\r\n\r\n\r\nclass EnterCode extends React.Component<EnterCodeProps, EnterCodeState> {\r\n\r\n    constructor(props: EnterCodeProps) {\r\n        super(props);\r\n\r\n        let selectedContactMethod: any = '';\r\n        let email: any = '';\r\n        let phone: any = '';\r\n\r\n        let qsParse: qs.ParsedQs = qs.parse(this.props.location.search, { ignoreQueryPrefix: true });\r\n\r\n        if ( qsParse ) {\r\n            selectedContactMethod = qsParse.selectedContactMethod;\r\n            email = qsParse.email; // Need email either way for back button\r\n            \r\n            if ( selectedContactMethod === 'phone' ) {\r\n                phone = qsParse.phone;\r\n            }\r\n        }\r\n\r\n        this.state = { selectedContactMethod, email, phone, submitIsTouched: false, code: '', enterCodeStatusType: EnterCodeStatusType.NONE };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleCodeChange = this.handleCodeChange.bind(this);\r\n        this.resendCodeClicked = this.resendCodeClicked.bind(this);\r\n    }\r\n\r\n    handleCodeChange(e: any) {\r\n        const code: string = e.target.value;\r\n        this.setState({code});\r\n    }\r\n\r\n    getCodeHelperText(): string {\r\n        if ( this.displayCodeTextFieldError() ) {\r\n            return 'Code must be 8 digits';\r\n        }\r\n\r\n        const { selectedContactMethod} = this.state;\r\n        \r\n        return `Enter the 8 digit code sent to your ${selectedContactMethod}.`;\r\n    }\r\n\r\n    codeIsValid(): boolean {\r\n        return this.state.code.length === 8;\r\n    }\r\n\r\n    displayCodeTextFieldError(): boolean {\r\n        const { submitIsTouched, code } = this.state;\r\n\r\n        if ( !submitIsTouched ) {\r\n            return false\r\n        }\r\n\r\n        return !this.codeIsValid();\r\n    }\r\n      \r\n    async handleSubmit(e: any) {\r\n        this.setState({submitIsTouched: true});\r\n\r\n        if ( !this.codeIsValid() ) {\r\n            return;\r\n        }\r\n        \r\n        const { email, code, selectedContactMethod, phone } = this.state;\r\n\r\n        try {\r\n\r\n            await userAPI.checkResetCode(email, code);\r\n\r\n            this.setState({enterCodeStatusType: EnterCodeStatusType.NONE});\r\n\r\n            // TODO: should I just do history.back or something\r\n            if (selectedContactMethod === 'email') {\r\n                this.props.history.push(`/resetpassword?email=${email}&code=${code}`);\r\n            }\r\n            else {\r\n                this.props.history.push(`/resetpassword?email=${email}&code=${code}`);\r\n            }\r\n        }\r\n        catch(error) {\r\n            console.error(\"error\",error)\r\n\r\n            if ( error.response.status === 401 ) {\r\n                if ( error.response.data.message === 'Invalid email/passcode combination') {\r\n                    this.setState({enterCodeStatusType: EnterCodeStatusType.INVALID_PASSCODE});\r\n                }\r\n                else if ( error.response.data.message === 'Reset code has expired' ) {\r\n                    this.setState({enterCodeStatusType: EnterCodeStatusType.CODE_EXPIRED});\r\n                }\r\n                else if ( error.response.data.message === 'Too many failed attempts' ) {\r\n                    this.setState({enterCodeStatusType: EnterCodeStatusType.TOO_MANY_ATTEMPTS});\r\n                }\r\n            }\r\n            else { //500, 'The server encountered an unknown error.', 400, Email and/or resetCode not sent (shouldn't ever happen)\r\n                this.setState({enterCodeStatusType: EnterCodeStatusType.INTERNAL_SERVER_ERROR});\r\n            }\r\n        }\r\n    }\r\n\r\n    displayFormHelperText(): boolean {\r\n        return this.state.enterCodeStatusType !== EnterCodeStatusType.NONE;\r\n    }\r\n\r\n    getFormHelperText(): string {\r\n        const { enterCodeStatusType, selectedContactMethod, email, phone } = this.state;\r\n\r\n        if ( enterCodeStatusType === EnterCodeStatusType.INVALID_PASSCODE ) {\r\n            return 'Wrong code, try again.';\r\n        }\r\n        else if ( enterCodeStatusType === EnterCodeStatusType.CODE_EXPIRED ) {\r\n            return 'This code has expired.';\r\n        }\r\n        else if ( enterCodeStatusType === EnterCodeStatusType.TOO_MANY_ATTEMPTS ) {\r\n            return 'Too many failed attempts.';\r\n        }\r\n        else if ( enterCodeStatusType === EnterCodeStatusType.INTERNAL_SERVER_ERROR ) {\r\n            return 'Internal server error. Please refresh the page and try again.';\r\n        }\r\n        else if ( enterCodeStatusType === EnterCodeStatusType.RESENT_CODE) {\r\n            return `Another code has been sent to ${selectedContactMethod === 'email' ? email : phone}`;\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    formHelperTextIsError(): boolean {\r\n        return this.state.enterCodeStatusType !== EnterCodeStatusType.RESENT_CODE;\r\n    }\r\n\r\n    displayResendCodeLink(): boolean {\r\n        const enterCodeStatusType: EnterCodeStatusType = this.state.enterCodeStatusType;\r\n\r\n        return  enterCodeStatusType === EnterCodeStatusType.TOO_MANY_ATTEMPTS || enterCodeStatusType === EnterCodeStatusType.CODE_EXPIRED;\r\n    }\r\n\r\n    async resendCodeClicked(e: any) { // TODO: Type\r\n        const { email, selectedContactMethod } = this.state;\r\n\r\n        try {\r\n            await userAPI.sendResetCode(email, selectedContactMethod);\r\n\r\n            this.setState({enterCodeStatusType: EnterCodeStatusType.RESENT_CODE});   \r\n        }\r\n        catch (error) {\r\n            this.setState({ enterCodeStatusType: EnterCodeStatusType.INTERNAL_SERVER_ERROR });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { selectedContactMethod, phone, email } = this.state;\r\n        const contactDetail = selectedContactMethod === 'email' ? email : phone;\r\n        return (\r\n            <div className=\"auth-page-container\">\r\n                <div className=\"auth-page\">\r\n                    <Typography className=\"auth-header\" color=\"primary\" variant=\"h4\">Enter Security Code</Typography>\r\n                    <form className=\"auth-form\">\r\n                        <div className=\"auth-instructions desktop-only\">Please check your {selectedContactMethod} for the 8 digit code that was sent to {contactDetail}.</div>\r\n                        <TextField onChange={this.handleCodeChange} className=\"auth-txt-field\" label=\"########\" variant=\"filled\" helperText={this.getCodeHelperText()} error={this.displayCodeTextFieldError()}/>\r\n                        <Button onClick={ this.handleSubmit } className=\"auth-btn\" variant=\"contained\" color=\"primary\" size=\"medium\">Enter Code</Button>\r\n                        <FormHelperText className={`auth-err ${this.displayFormHelperText() ? \"\" : \"display-none\"}`} error={this.formHelperTextIsError()}>{this.getFormHelperText()}<span className={`resend-code ${this.displayResendCodeLink() ? \"\" : \"display-none\"}`} onClick={this.resendCodeClicked}>Resend Code?</span></FormHelperText>\r\n                    </form>\r\n                    <div className=\"non-important-btns-container\">\r\n                        <Link className=\"no-underline\" to={`/pickresetmethod?email=${email}&phone=${phone}`}>\r\n                            <Button className=\"enter-code-btn non-important-btn\" color=\"primary\">Try Another Way</Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EnterCode;","import React from 'react';\r\nimport { AuthContextConsumer } from '../contexts/authContext';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\nimport qs from 'qs';\r\n\r\nimport * as userAPI from '../api/user';\r\n\r\n\r\nimport PasswordInput from './PasswordInput';\r\n\r\nimport './ResetPassword.css';\r\n\r\ntype ResetPasswordState = {\r\n    resetPasswordFailureType: ResetPasswordFailureType,\r\n    code: string,\r\n    email: string,\r\n    password: string,\r\n    submitButtonTouched: boolean,\r\n    passwordChangeSuccess: boolean\r\n}\r\ntype ResetPasswordProps = {\r\n    location: any, // TODO: TYPE\r\n    history: any // TODO: Type\r\n}\r\n\r\nenum ResetPasswordFailureType {\r\n    PASSWORD_EXPIRED,\r\n    INTERNAL_SERVER_ERROR,\r\n    NONE\r\n}\r\n\r\nclass ResetPassword extends React.Component<ResetPasswordProps, ResetPasswordState> {\r\n\r\n    constructor(props: ResetPasswordProps) {\r\n        super(props);\r\n\r\n        let qsParse: qs.ParsedQs = qs.parse(this.props.location.search, { ignoreQueryPrefix: true });\r\n\r\n        let code: any = '';\r\n        let email: any = '';\r\n\r\n        if ( qsParse ) {\r\n            code = qsParse.code;\r\n            email = qsParse.email; // Need email either way for back button            \r\n        }\r\n\r\n        this.state = {\r\n            code,\r\n            email,\r\n            password: '',\r\n            resetPasswordFailureType: ResetPasswordFailureType.NONE,\r\n            submitButtonTouched: false,\r\n            passwordChangeSuccess: false \r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n    }\r\n\r\n    handlePasswordChange(e: any) {\r\n        const password = e.target.value;\r\n        this.setState({password});\r\n    }\r\n\r\n    displayPasswordError(): boolean {\r\n        return !this.passwordIsValid() && this.state.submitButtonTouched;\r\n    }\r\n\r\n    passwordHasCorrectLength(): boolean {\r\n        const { password } = this.state;\r\n\r\n        return password.length >= 8 && password.length <= 32;\r\n    }\r\n    \r\n    // TODO: Fix this\r\n    passwordHasCorrectCharacters(): boolean {\r\n        const { password } = this.state;\r\n\r\n        const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[^\\da-zA-Z]).{8,32}$/\r\n\r\n        return regex.test(password);\r\n\r\n    }\r\n\r\n    passwordIsValid(): boolean {\r\n        return this.passwordHasCorrectCharacters() && this.passwordHasCorrectLength();\r\n    }\r\n\r\n    getPasswordHelperText(): string {\r\n        const { submitButtonTouched } = this.state;\r\n\r\n        if ( !this.passwordHasCorrectLength() && submitButtonTouched ) {\r\n            return 'Enter between 8 and 32 characters';\r\n        }\r\n        else if ( !this.passwordHasCorrectCharacters() && submitButtonTouched ) {\r\n            return 'Include a letter, number, and special character';\r\n        }\r\n    \r\n        return 'Enter your new password';\r\n    }\r\n\r\n    displayFormError(): boolean {\r\n        return this.state.resetPasswordFailureType !== ResetPasswordFailureType.NONE;\r\n    }\r\n\r\n    getFormErrorText(): string {\r\n        const { resetPasswordFailureType } = this.state;\r\n\r\n        if ( resetPasswordFailureType === ResetPasswordFailureType.PASSWORD_EXPIRED ) {\r\n            return 'This reset code has expired.';\r\n        }\r\n        else if ( resetPasswordFailureType === ResetPasswordFailureType.INTERNAL_SERVER_ERROR ) {\r\n            return 'Internal server error. Please refresh the page and try again.';\r\n        }\r\n\r\n        return '';\r\n    }\r\n      \r\n    async handleSubmit(callback: any) { // TODO: Rename this\r\n        const { email, password, code } = this.state;\r\n\r\n        this.setState({submitButtonTouched: true});\r\n\r\n        if ( !this.passwordIsValid() ) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await userAPI.changePassword(email, password, code);\r\n            this.setState({resetPasswordFailureType: ResetPasswordFailureType.NONE, passwordChangeSuccess: true});\r\n   \r\n            callback();\r\n\r\n            setTimeout( () => {\r\n                this.props.history.push('/features/schedule');\r\n            }, 500);\r\n        }\r\n        catch ( error ) {\r\n            if ( error.response.status === 401 && error.response.data.message === 'Reset code has expired' ) {\r\n                this.setState({resetPasswordFailureType: ResetPasswordFailureType.PASSWORD_EXPIRED});\r\n                console.log('error.response.data',error.response.data);\r\n            }\r\n            else {\r\n                this.setState({resetPasswordFailureType: ResetPasswordFailureType.INTERNAL_SERVER_ERROR});\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const {passwordChangeSuccess} = this.state;\r\n\r\n        return (\r\n            <div className=\"auth-page-container\">\r\n                <div className=\"auth-page\">\r\n                    <Typography className=\"auth-header\" color=\"primary\" variant=\"h4\">Reset Password</Typography>\r\n                    <form className=\"auth-form\">\r\n                        <div className=\"auth-instructions desktop-only\">Enter a new password between 8 and 32 characters. Include at least one uppercase letter, lowercase letter, number, and special character. </div>\r\n                        <PasswordInput onChange={this.handlePasswordChange} inputProps={{ maxLength: 32 }} className=\"auth-txt-field\" error={this.displayPasswordError()} helperText={this.getPasswordHelperText()} label=\"New Password\"/>\r\n                        <AuthContextConsumer>\r\n                        {context => (\r\n                            <Button onClick={ e => this.handleSubmit(context.login) } className=\"auth-btn\" variant=\"contained\" color=\"primary\" size=\"medium\">Change Password</Button>\r\n                        )}\r\n                        </AuthContextConsumer>\r\n                        <FormHelperText className={`auth-err ${this.displayFormError() ? \"\" : \"display-none\"}`} error={this.displayFormError()}>{this.getFormErrorText()}</FormHelperText>\r\n                        <div className={`change-pw-success ${passwordChangeSuccess ? \"\" : \"display-none\"}`}>\r\n                            <div className=\"change-pw-success-txt\">Password Changed</div>\r\n                            <CheckCircleOutlineIcon color=\"primary\"/>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResetPassword;","import React from 'react';\r\nimport { Route, Redirect  } from 'react-router-dom';\r\n\r\nimport { AuthContextConsumer } from '../contexts/authContext';\r\n\r\nimport Login from './Login';\r\n\r\ntype PrivateRouteState = {}\r\ntype PrivateRouteProps = { options?: any, component?: any, children?: any, path?: any }\r\n\r\nclass PrivateRoute extends React.Component<PrivateRouteProps, PrivateRouteState> {\r\n\r\n    render() {\r\n      const { options, component, children } = this.props;\r\n\r\n      return (\r\n        <AuthContextConsumer>\r\n          {\r\n\r\n          (context) => { return context.isLoggedIn ? (\r\n            <Route path={this.props.path} {...options} component={ context.isLoggedIn ? component : Login}>{children}</Route> )\r\n            : (<Redirect to=\"/login\"/>)\r\n          }\r\n          \r\n          }\r\n        </AuthContextConsumer>\r\n      );\r\n    }\r\n}\r\n\r\nexport default PrivateRoute;","import { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\n\r\nimport PrayerRequests from './components/PrayerRequests';\r\nimport Main from './components/Main';\r\nimport HomelessPeople from './components/HomelessPeople';\r\nimport MapComponent from './components/MapComponent';\r\nimport Schedule from './components/Schedule';\r\nimport AccountSettings from './components/AccountSettings';\r\nimport Splash from './components/Splash';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport FindAccount from './components/FindAccount';\r\nimport PickResetMethod from './components/PickResetMethod';\r\nimport EnterCode from './components/EnterCode';\r\nimport ResetPassword from './components/ResetPassword';\r\n\r\nimport PrivateRoute from './components/PrivateRoute';\r\n\r\n\r\nimport './App.css';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/register\" component={Register} />\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/findaccount\" component={FindAccount} />\r\n        <Route exact path=\"/pickresetmethod\" component={PickResetMethod} />\r\n        <Route exact path=\"/entercode\" component={EnterCode} />\r\n        <Route exact path=\"/resetpassword\" component={ResetPassword} />\r\n        <Route exact path=\"/\" component={Splash} />\r\n        <PrivateRoute path=\"/features\">\r\n          <Main>\r\n            <Route path=\"/features/schedule\" component={Schedule} />\r\n            <Route path=\"/features/homelesspeople\" component={HomelessPeople} />\r\n            <Route path=\"/features/prayerrequests\" component={PrayerRequests} />\r\n            <Route path=\"/features/map\" component={MapComponent} />\r\n            <Route path=\"/features/accountsettings\" component={AccountSettings} />\r\n          </Main>\r\n        </PrivateRoute>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\r\nimport orange from '@material-ui/core/colors/orange';\r\nimport teal from '@material-ui/core/colors/teal';\r\n\r\nlet theme = createMuiTheme({\r\n  palette: {\r\n    primary: teal,\r\n    secondary: orange\r\n  },\r\n  status: {\r\n      danger: 'red'\r\n  }\r\n});\r\n\r\ntheme = responsiveFontSizes(theme);\r\n\r\nexport default theme;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport { AuthContextProvider } from \"./contexts/authContext\";\r\n\r\nimport theme from './theme';\r\n\r\nReactDOM.render(\r\n  //<React.StrictMode>\r\n    <AuthContextProvider>\r\n      <ThemeProvider theme={theme}>\r\n        <App />\r\n      </ThemeProvider>\r\n    </AuthContextProvider>,\r\n  //</React.StrictMode>\r\n\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}