{"version":3,"sources":["components/PrayerRequests.tsx","components/Header.tsx","components/Main.tsx","components/HomelessPeople.tsx","components/MapComponent.tsx","api/event.tsx","components/AddEventDialog.tsx","img/ggchurch.png","components/ViewEventDialog.tsx","components/ErrorBox.tsx","components/EditEventDialog.tsx","components/Schedule.tsx","api/auth.tsx","api/user.tsx","contexts/authContext.js","components/AccountSettings.tsx","components/Splash.tsx","components/Login.tsx","components/PasswordInput.tsx","components/FindAccount.tsx","components/Register.tsx","components/PickResetMethod.tsx","components/EnterCode.tsx","components/ResetPassword.tsx","components/PrivateRoute.tsx","App.tsx","theme.js","index.tsx"],"names":["PrayerRequests","props","React","Component","Header","className","AppBar","position","Toolbar","Typography","variant","to","activeClassName","Main","this","children","HomelessPeople","MapComponent","getEvents","a","axios","get","createEvent","event","post","deleteEvent","id","delete","AddEventDialog","state","title","startTime","endTime","date","description","undefined","submitPressed","internalServerError","handleTitleChange","bind","handleStartTimeChange","handleEndTimeChange","handleDateChange","handleDescriptionChange","handleCancel","handleSubmit","e","target","value","setState","onCancel","endTimeIsValid","startHours","hour","startMinutes","minute","endHours","endMinutes","startDateAndTime","set","setZone","endDateAndTime","eventAPI","start","toJSDate","end","response","data","DateTime","fromISO","onEventAdded","status","console","log","error","TextField","titlehasErrorTxt","onChange","label","helperText","inputProps","maxLength","utils","LuxonUtils","DatePicker","datehasErrorTxt","inputVariant","format","margin","InputProps","endAdornment","InputAdornment","color","TimePicker","startTimehasErrorTxt","endTimehasErrorTxt","getEndTimeHelperTxt","multiline","rows","FormHelperText","hasInternalServerError","Button","onClick","size","ViewEventDialog","notFound404Error","handleEdit","handleDelete","onEdit","onDelete","startStr","fromJSDate","toFormat","endStr","dateTimeStr","src","churchImg","alt","endIcon","ErrorBox","message","EditEventDialog","utcDate","utcStartTime","utcEndTime","put","onEventUpdated","Schedule","currentEvent","addEventDialogOpen","events","eventsLoaded","errorLoadingEvents","deleteEventSnackbarOpen","successAddEventSnackbarOpen","editEventDialogEvent","updateEventSnackbarOpen","eventClicked","eventDeleted","openEditDialog","closeEditEventDialog","eventAdded","openViewEventDialog","closeViewEventDialog","eventUpdated","handleCloseUpdateEventSnackbar","openAddEventDialog","closeAddEventDialog","handleCloseAddEventSnackbar","handleUndoAddEvent","handleCloseDeleteEventSnackbar","handleUndoDeleteEvent","loadEvents","result","forEach","filter","find","updatedEvent","index","findIndex","push","localizer","luxonLocalizer","style","height","onSelectEvent","CircularProgress","viewEventDialog","Fab","aria-label","Snackbar","open","autoHideDuration","onClose","action","Fragment","IconButton","fontSize","register","email","password","login","hasLoginCookie","Cookies","sendResetCode","selectedContactMethod","checkResetCode","resetCode","params","changePassword","updateNameFirst","nameFirst","patch","updateNameLast","nameLast","updatePhoneNumber","phoneNumber","createContext","Provider","Consumer","AuthContextProvider","isLoggedIn","auth","logout","AccountSettings","user","couldNotLoadUser","editingFirstName","editingLastName","editingPhone","updateError","updateSuccessSnackbarOpen","snackbarText","nameFirstFormValue","nameLastFormValue","phoneNumberFormValue","getUser","editFirstName","cancelEditFirstName","saveFirstName","handleChangeFirstNameFormValue","editLastName","cancelEditLastName","saveLastName","handleChangeLastNameFormValue","editPhone","cancelEditPhone","savePhone","handleChangePhoneFormValue","handleCloseSnackbar","userAPI","callback","history","Divider","type","context","handleLogout","Splash","LoginFailureType","PasswordInput","togglePasswordMask","prevState","passwordIsMasked","getVisibilityIcon","SearchAccountFailureType","Login","submitIsTouched","loginFailureType","NONE","handleEmailChange","handlePasswordChange","length","BAD_EMAIL_PASSWORD","INTERNAL_SERVER_ERROR","ACCOUNT_LOCKED","emailHasError","passwordHasError","hasFormError","getFormErrorText","Register","passwordIsTouched","emailIsTaken","test","isValidEmail","passwordIsValid","passwordHasCorrectLength","name","getEmailHelperText","getPasswordHelperText","PickResetMethodFailureType","FindAccount","contact","searchAccountFailureType","handleContactChange","account","contactInformation","contactInfo","phone","ACCOUNT_NOT_FOUND","contactHasError","displayFormError","EnterCodeStatusType","PickResetMethod","qs","parse","location","search","ignoreQueryPrefix","pickResetMethodFailureType","handleChange","emailOption","Radio","checked","phoneOption","Paper","elevation","ResetPasswordFailureType","EnterCode","qsParse","code","enterCodeStatusType","handleCodeChange","resendCodeClicked","displayCodeTextFieldError","codeIsValid","INVALID_PASSCODE","CODE_EXPIRED","TOO_MANY_ATTEMPTS","RESENT_CODE","contactDetail","getCodeHelperText","displayFormHelperText","formHelperTextIsError","getFormHelperText","displayResendCodeLink","ResetPassword","resetPasswordFailureType","submitButtonTouched","passwordChangeSuccess","passwordHasCorrectCharacters","PASSWORD_EXPIRED","setTimeout","displayPasswordError","PrivateRoute","options","component","path","App","exact","theme","createMuiTheme","palette","primary","teal","secondary","orange","danger","responsiveFontSizes","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.ba522c79.chunk.js","sourcesContent":["import React  from 'react';\r\n\r\ntype PrayerRequestsState = {\r\n\r\n}\r\n\r\ntype PrayerRequestsProps = {\r\n\r\n}\r\n\r\nclass PrayerRequests extends React.Component<PrayerRequestsProps, PrayerRequestsState> {\r\n    constructor(props: PrayerRequestsProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <h1>Prayer Requests</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PrayerRequests;","import React from 'react';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport PrayerRequestIcon from '@material-ui/icons/AccessibilityNew';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './Header.css';\r\n\r\ntype HeaderState = {}\r\n\r\ntype HeaderProps = {}\r\n\r\nclass Header extends React.Component<HeaderProps, HeaderState> {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app-bar-container\">\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" className=\"title\"></Typography>\r\n                        <nav>\r\n                            <NavLink className=\"icon-container\" to=\"/features/schedule\" activeClassName=\"icon-container-active\">\r\n                                <EventIcon className=\"icon\" />\r\n                                <div className=\"icon-description\">Schedule</div>\r\n                            </NavLink>\r\n                            <NavLink className=\"icon-container\" to=\"/features/homelesspeople\" activeClassName=\"icon-container-active\">\r\n                                <PeopleIcon className=\"icon\" />\r\n                                <div className=\"icon-description\">Homeless People</div>\r\n                            </NavLink>\r\n                            <NavLink className=\"icon-container\" to=\"/features/prayerrequests\" activeClassName=\"icon-container-active\">\r\n                                <PrayerRequestIcon className=\"icon\" />\r\n                                <div className=\"icon-description\">Prayer Requests</div>\r\n                            </NavLink>\r\n                            <NavLink className=\"icon-container\" to=\"/features/map\" activeClassName=\"icon-container-active\">\r\n                                <MapIcon className=\"icon\" />\r\n                                <div className=\"icon-description\">Map</div>\r\n                            </NavLink>\r\n                            <NavLink className=\"icon-container\" to=\"/features/accountsettings\" activeClassName=\"icon-container-active\">\r\n                                <AccountCircle className=\"icon\" />\r\n                                <div className=\"icon-description\">Account</div>\r\n                            </NavLink>\r\n                        </nav>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\n\r\nimport Header from './Header';\r\n\r\nimport './Main.css';\r\n\r\ninterface MainProps {\r\n  children: any; /* ReactChild | ReactChildren; */\r\n}\r\n\r\ninterface MainState {}\r\n\r\nclass Main extends React.Component <MainProps, MainState > {\r\n\r\n  render() {\r\n    return (\r\n      /*\r\n      TODO: Add to below div\r\ndisplay: flex;\r\nflex-direction: column;\r\nheight: 100%;\r\n      */\r\n      <div className=\"main-container\">\r\n        <Header/>\r\n        <main>{this.props.children}</main> \r\n      </div>\r\n    );\r\n    // TODO: add flex: 1 to main\r\n  }\r\n}\r\n\r\nexport default Main;","import React  from 'react';\r\n\r\ntype HomelessPeopleState = {\r\n\r\n}\r\n\r\ntype HomelessPeopleProps = {\r\n\r\n}\r\n\r\nclass HomelessPeople extends React.Component<HomelessPeopleProps, HomelessPeopleState> {\r\n    constructor(props: HomelessPeopleProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <h1>Homeless People</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomelessPeople;","import React  from 'react';\r\n\r\ntype MapComponentState = {\r\n  \r\n}\r\n\r\ntype MapComponentProps = {\r\n\r\n}\r\n\r\nclass MapComponent extends React.Component<MapComponentProps, MapComponentState> {\r\n    constructor(props: MapComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <h1>Map of Frederick</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MapComponent;","import axios, { AxiosResponse } from 'axios';\r\n\r\nimport Event from '../models/Event';\r\n\r\n\r\nexport const getEvents = async (): Promise<AxiosResponse<any>> => {\r\n    return axios.get('/api/events');\r\n}\r\n\r\nexport const createEvent = async (event: any): Promise<AxiosResponse<any>> => {\r\n    return axios.post('/api/events', event);\r\n}\r\n\r\nexport const deleteEvent = (id: number): Promise<AxiosResponse<any>> => {\r\n    return axios.delete(`/api/events/${id}`);\r\n}\r\n\r\nexport const updateEvent = (event: Event): Promise<AxiosResponse<any>> => {\r\n    console.log(\"updateEvent() with event=\", event)\r\n    return axios.put('/api/events/', {\r\n        event\r\n    });\r\n}","import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\r\n\r\nimport * as eventAPI from '../api/event';\r\n\r\nimport LuxonUtils from '@date-io/luxon';\r\n\r\nimport { DateTime } from 'luxon';\r\n\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\n\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  TimePicker,\r\n  DatePicker\r\n} from '@material-ui/pickers';\r\n\r\nimport AccessAlarmIcon from '@material-ui/icons/AccessAlarm';\r\nimport EventIcon from '@material-ui/icons/Event';\r\n\r\nimport { InputAdornment } from '@material-ui/core';\r\n\r\nimport './AddEventDialog.css';\r\n\r\ntype AddEventDialogState = {\r\n    title: string | null,\r\n    startTime: MaterialUiPickersDate | null,\r\n    endTime: MaterialUiPickersDate | null,\r\n    date: MaterialUiPickersDate | null,\r\n    description: string | undefined,\r\n    submitPressed: boolean,\r\n    internalServerError: boolean\r\n}\r\n\r\ntype AddEventDialogProps = {\r\n    onCancel: () => void;\r\n    onEventAdded: (event: any) => void;\r\n}\r\n\r\nclass AddEventDialog extends React.Component<AddEventDialogProps, AddEventDialogState> {\r\n\r\n    constructor(props: AddEventDialogProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: '',\r\n            startTime: null,\r\n            endTime: null,\r\n            date: null,\r\n            description: undefined,\r\n            submitPressed: false,\r\n            internalServerError: false\r\n     };\r\n\r\n        this.handleTitleChange = this.handleTitleChange.bind(this);\r\n        this.handleStartTimeChange = this.handleStartTimeChange.bind(this);\r\n        this.handleEndTimeChange = this.handleEndTimeChange.bind(this);\r\n        this.handleDateChange = this.handleDateChange.bind(this);\r\n        this.handleDescriptionChange = this.handleDescriptionChange.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleTitleChange(e: any) {\r\n        const title: string = e.target.value;\r\n        this.setState({title});\r\n    }\r\n    \r\n    handleStartTimeChange(startTime: MaterialUiPickersDate | null) {\r\n        this.setState({startTime});\r\n    }\r\n\r\n    handleEndTimeChange(endTime: MaterialUiPickersDate | null) {\r\n        this.setState({endTime});\r\n    }\r\n\r\n    handleDateChange(date: MaterialUiPickersDate | null) {\r\n        this.setState({ date: date});\r\n    }\r\n\r\n    handleDescriptionChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n        const description: string = e.target.value;\r\n        this.setState({description});\r\n    }\r\n\r\n    handleCancel(e: React.MouseEvent<HTMLElement>) {\r\n        this.props.onCancel();\r\n    }\r\n\r\n    titlehasErrorTxt(): boolean {\r\n        const { title, submitPressed } = this.state;\r\n\r\n        return submitPressed && !title;\r\n    }\r\n\r\n    datehasErrorTxt(): boolean {\r\n        const { date, submitPressed } = this.state;\r\n\r\n        return submitPressed && !date;\r\n    }\r\n\r\n    startTimehasErrorTxt(): boolean {\r\n        const { startTime, submitPressed } = this.state;\r\n\r\n        return submitPressed && !startTime;\r\n    }\r\n\r\n    endTimehasErrorTxt(): boolean {\r\n        const { endTime, submitPressed } = this.state;\r\n\r\n        return submitPressed && (!endTime || !this.endTimeIsValid()) ;\r\n    }\r\n\r\n    endTimeIsValid(): boolean {\r\n        const { startTime, endTime } = this.state;\r\n\r\n        if ( startTime && endTime ) {\r\n            if ( startTime > endTime ) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    getEndTimeHelperTxt(): string {\r\n        const { submitPressed } = this.state;\r\n\r\n        if ( submitPressed && !this.endTimeIsValid() ) {\r\n            return 'End time must be after start time';\r\n        }\r\n\r\n        return 'What time should the outreach end?';\r\n    }\r\n\r\n    async handleSubmit(e: React.MouseEvent<HTMLElement>) {\r\n\r\n        this.setState({submitPressed: true});\r\n\r\n        const { title, startTime, endTime, date, description } = this.state;\r\n\r\n        if ( !title || !date || !startTime || !endTime || !this.endTimeIsValid() ) {\r\n            return;\r\n        }\r\n\r\n        const startHours: number = startTime.hour;\r\n        const startMinutes: number = startTime.minute;\r\n\r\n        const endHours: number = endTime.hour;\r\n        const endMinutes: number = endTime.minute;\r\n\r\n        let startDateAndTime: DateTime = date.set({hour: startHours, minute: startMinutes}).setZone('America/New_York');\r\n        let endDateAndTime: DateTime = date.set({hour: endHours, minute: endMinutes}).setZone('America/New_York');\r\n\r\n        try {\r\n            let response = await eventAPI.createEvent({ title, start: startDateAndTime.toJSDate(), end: endDateAndTime.toJSDate(), description });\r\n            \r\n            let event = response.data;\r\n            event.start = DateTime.fromISO(event.start).toJSDate();\r\n            event.end = DateTime.fromISO(event.end).toJSDate();\r\n        \r\n            this.props.onEventAdded(event);\r\n        }\r\n        catch ( error ) {\r\n            if ( error.response.status === 500 ) {\r\n                this.setState({internalServerError: true});\r\n            }\r\n            else {\r\n                console.log(\"error=\",error)\r\n                console.error('Unhandled error'); // TODO: Handle this\r\n            }\r\n        }\r\n    }\r\n\r\n    hasInternalServerError(): boolean {\r\n        return this.state.internalServerError;\r\n    }\r\n\r\n\r\n    render() {\r\n        const { startTime, endTime, date } = this.state;\r\n        \r\n        return (\r\n            <div className=\"grayout\">\r\n                <div className=\"add-event-dialog\">\r\n                    <div className=\"dialog-header\">\r\n                        <Typography className=\"dialog-title\" variant=\"h4\">Add Event</Typography>\r\n                    </div>\r\n                    <div className=\"dialog-body\">\r\n                        <div className=\"dialog-form\">\r\n                            <TextField error={this.titlehasErrorTxt()} onChange={this.handleTitleChange} className=\"dialog-txt-field\" label=\"Title\" variant=\"filled\" helperText=\"Enter the title of the outreach event\" inputProps={{ maxLength: 64 }} />\r\n\r\n                            <MuiPickersUtilsProvider utils={LuxonUtils}>\r\n                                <DatePicker\r\n                                    error={this.datehasErrorTxt()}\r\n                                    className=\"dialog-picker-field\"\r\n                                    inputVariant=\"filled\"\r\n                                    format=\"MM/dd/yyyy\"\r\n                                    value={date}\r\n                                    margin=\"normal\"\r\n                                    label=\"Start Date\"\r\n                                    onChange={this.handleDateChange}\r\n                                    helperText=\"What date should the outreach be on?\"\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <EventIcon color=\"primary\"/>\r\n                                        </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n\r\n                                <TimePicker\r\n                                    error={this.startTimehasErrorTxt()}\r\n                                    className=\"dialog-picker-field\"\r\n                                    inputVariant=\"filled\"\r\n                                    format=\"h:mm a\"\r\n                                    value={startTime}\r\n                                    margin=\"normal\"\r\n                                    label=\"Start Time\"\r\n                                    onChange={this.handleStartTimeChange}\r\n                                    helperText=\"What time should the outreach start?\"\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <AccessAlarmIcon color=\"primary\"/>\r\n                                        </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n\r\n                                <TimePicker\r\n                                    error={this.endTimehasErrorTxt()}\r\n                                    className=\"dialog-picker-field\"\r\n                                    inputVariant=\"filled\"\r\n                                    format=\"h:mm a\"\r\n                                    value={endTime}\r\n                                    margin=\"normal\"\r\n                                    label=\"End Time\"\r\n                                    onChange={this.handleEndTimeChange}\r\n                                    helperText={this.getEndTimeHelperTxt()}\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <AccessAlarmIcon color=\"primary\"/>\r\n                                        </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n\r\n                            </MuiPickersUtilsProvider>\r\n\r\n                            <TextField\r\n                                label=\"Description\"\r\n                                multiline\r\n                                rows={4}\r\n                                onChange={this.handleDescriptionChange}\r\n                                helperText=\"Enter the description of this event\"\r\n                                variant=\"filled\"\r\n                                inputProps={{ maxLength: 2048 }}\r\n                            />\r\n\r\n                            <FormHelperText className={`${this.hasInternalServerError() ? \"\" : \"display-none\"}`} error={true}>Uh-oh! A problem occured. Please refresh the page and try again.</FormHelperText>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"dialog-actions\">\r\n                        <Button color=\"primary\" className=\"dialog-btn\" onClick={ this.handleCancel } variant=\"contained\" size=\"medium\">Cancel</Button>\r\n                        <Button color=\"primary\" className=\"dialog-btn\" onClick={ this.handleSubmit } variant=\"contained\" size=\"medium\">Add</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddEventDialog;","export default __webpack_public_path__ + \"static/media/ggchurch.641527ed.png\";","import React  from 'react';\r\n\r\nimport './ViewEventDialog.css';\r\n\r\nimport churchImg from '../img/ggchurch.png';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { DateTime } from 'luxon';\r\n\r\nimport * as eventAPI from '../api/event';\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport Event from '../models/Event';\r\n\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\ntype ViewEventDialogProps = {\r\n    event: Event\r\n    onCancel: () => void;\r\n    onEdit: (id: number) => void;\r\n    onDelete: (id: number) => void;\r\n}\r\n\r\ntype ViewEventDialogState = {\r\n    internalServerError: boolean;\r\n    notFound404Error: boolean;\r\n}\r\n\r\nclass ViewEventDialog extends React.Component<ViewEventDialogProps, ViewEventDialogState> {\r\n    constructor(props: ViewEventDialogProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            internalServerError: false,\r\n            notFound404Error: false\r\n\r\n        };\r\n\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n    }\r\n\r\n    handleCancel(/*e: React.MouseEventHandler<HTMLButtonElement>*/) {\r\n        this.props.onCancel();\r\n    }\r\n\r\n    handleEdit() {\r\n        if ( this.props.event ) {\r\n            const { id } = this.props.event;\r\n            this.props.onEdit(id as number);\r\n        }\r\n    }\r\n\r\n    async handleDelete() {\r\n        const id: number = this.props.event.id as number;\r\n        try {\r\n            await eventAPI.deleteEvent(id);\r\n\r\n            this.setState({internalServerError: false, notFound404Error: false});\r\n            this.props.onDelete(id);\r\n        }\r\n        catch ( error ) {\r\n            if ( error.response.status === 500 ) {\r\n                this.setState({internalServerError: true});\r\n            }\r\n            else if (error.response.status === 404) {\r\n                this.setState({notFound404Error: true});\r\n            }\r\n            else {\r\n                console.error('Unhandled error')\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const { title, start, end, description } = this.props.event;\r\n        const { internalServerError, notFound404Error } = this.state;\r\n\r\n        const startStr: string = DateTime.fromJSDate(start).toFormat('MMMM dd, h:mm a');\r\n        const endStr: string = DateTime.fromJSDate(end).toFormat('h:mm a');\r\n        const dateTimeStr: string = `${startStr} - ${endStr}`;\r\n\r\n        return (\r\n            <div className=\"grayout\">\r\n                <div className=\"view-event-dialog\">\r\n                    <div className=\"view-dialog-header\">\r\n                        <div className=\"primary-header\">{title}</div>\r\n                        <div className=\"secondary-header\">{dateTimeStr}</div>\r\n                    </div>\r\n                    <div className=\"location-img-container\">\r\n                        <img className=\"location-img\" src={churchImg} alt=\"greater grace church\" />\r\n                    </div>\r\n                    <div className=\"view-dialog-body\">\r\n                        <div className=\"event-description\">{description}</div>\r\n                        <div className=\"actions-container\">\r\n                            <Button onClick={this.handleDelete } className=\"delete-event-icon\" variant=\"outlined\" endIcon={<DeleteIcon color=\"primary\" />}>\r\n                                <div className=\"delete-txt\">Delete</div>\r\n                            </Button>\r\n                            <Button onClick={ this.handleEdit } className=\"edit-event-icon\" variant=\"outlined\" endIcon={<EditIcon color=\"primary\" />}>\r\n                                <div className=\"edit-txt\">Edit</div>\r\n                            </Button>\r\n                            <Button onClick={ this.handleCancel } className=\"close-event-dialog\" variant=\"outlined\" endIcon={<CloseIcon color=\"primary\" />}>Done</Button>\r\n                        \r\n                            <FormHelperText className={`delete-err ${notFound404Error ? \"\" : \"display-none\"}`} error={true}>Uh-oh! A problem occured. The event may have already been deleted. Please refresh the page and try again.</FormHelperText>\r\n                            <FormHelperText className={`delete-err ${internalServerError ? \"\" : \"display-none\"}`} error={true}>Uh-oh! A problem occured. Please refresh the page and try again.</FormHelperText>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewEventDialog;","import './ErrorBox.css';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\n\r\ntype ErrorBoxProps = {\r\n    message: string\r\n}\r\n\r\nfunction ErrorBox(props: ErrorBoxProps) {\r\n    return (\r\n        <div className=\"error-box\">\r\n            <ErrorIcon color=\"error\"/>\r\n            <div className=\"error-msg\">{props.message}</div>\r\n        </div> \r\n    );\r\n}\r\n\r\nexport default ErrorBox;","import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\r\n\r\nimport * as eventAPI from '../api/event';\r\n\r\nimport LuxonUtils from '@date-io/luxon';\r\n\r\nimport { DateTime } from 'luxon';\r\n\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport Event from '../models/Event';\r\n\r\n\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  TimePicker,\r\n  DatePicker\r\n} from '@material-ui/pickers';\r\n\r\nimport AccessAlarmIcon from '@material-ui/icons/AccessAlarm';\r\nimport EventIcon from '@material-ui/icons/Event';\r\n\r\nimport { InputAdornment } from '@material-ui/core';\r\n\r\nimport './AddEventDialog.css';\r\n\r\ntype EditEventDialogState = {\r\n    title: string | null,\r\n    startTime: MaterialUiPickersDate | null,\r\n    endTime: MaterialUiPickersDate | null,\r\n    date: MaterialUiPickersDate | null,\r\n    description: string | undefined,\r\n    submitPressed: boolean,\r\n    internalServerError: boolean,\r\n}\r\n\r\ntype EditEventDialogProps = {\r\n    event: Event;\r\n    onCancel: () => void;\r\n    onEventUpdated: (event: Event) => void;\r\n}\r\n\r\nclass EditEventDialog extends React.Component<EditEventDialogProps, EditEventDialogState> {\r\n\r\n    constructor(props: EditEventDialogProps) {\r\n        super(props);\r\n\r\n        const { title, start, end, description } = this.props.event;\r\n\r\n       const utcDate: DateTime = DateTime.fromJSDate(start).setZone('America/New_York');\r\n       const utcStartTime: DateTime = DateTime.fromJSDate(start).setZone('America/New_York');\r\n       const utcEndTime: DateTime = DateTime.fromJSDate(end).setZone('America/New_York');\r\n\r\n        this.state = {\r\n            title: title,\r\n            startTime: utcStartTime,\r\n            endTime: utcEndTime,\r\n            date: utcDate,\r\n            description: description,\r\n            submitPressed: false,\r\n            internalServerError: false\r\n        };\r\n\r\n        this.handleTitleChange = this.handleTitleChange.bind(this);\r\n        this.handleStartTimeChange = this.handleStartTimeChange.bind(this);\r\n        this.handleEndTimeChange = this.handleEndTimeChange.bind(this);\r\n        this.handleDateChange = this.handleDateChange.bind(this);\r\n        this.handleDescriptionChange = this.handleDescriptionChange.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleTitleChange(e: any) {\r\n        const title: string = e.target.value;\r\n        this.setState({title});\r\n    }\r\n    \r\n    handleStartTimeChange(startTime: MaterialUiPickersDate | null) {\r\n        this.setState({startTime});\r\n    }\r\n\r\n    handleEndTimeChange(endTime: MaterialUiPickersDate | null) {\r\n        this.setState({endTime});\r\n    }\r\n\r\n    handleDateChange(date: MaterialUiPickersDate | null) {\r\n        this.setState({ date: date});\r\n    }\r\n\r\n    handleDescriptionChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n        const description: string = e.target.value;\r\n        this.setState({description});\r\n    }\r\n\r\n    handleCancel(e: React.MouseEvent<HTMLElement>) {\r\n        this.props.onCancel();\r\n    }\r\n\r\n    titlehasErrorTxt(): boolean {\r\n        const { title, submitPressed } = this.state;\r\n\r\n        return submitPressed && !title;\r\n    }\r\n\r\n    datehasErrorTxt(): boolean {\r\n        const { date, submitPressed } = this.state;\r\n\r\n        return submitPressed && !date;\r\n    }\r\n\r\n    startTimehasErrorTxt(): boolean {\r\n        const { startTime, submitPressed } = this.state;\r\n\r\n        return submitPressed && !startTime;\r\n    }\r\n\r\n    endTimehasErrorTxt(): boolean {\r\n        const { endTime, submitPressed } = this.state;\r\n\r\n        return submitPressed && (!endTime || !this.endTimeIsValid()) ;\r\n    }\r\n\r\n    endTimeIsValid(): boolean {\r\n        const { startTime, endTime } = this.state;\r\n\r\n        if ( startTime && endTime ) {\r\n            if ( startTime > endTime ) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    getEndTimeHelperTxt(): string {\r\n        const { submitPressed } = this.state;\r\n\r\n        if ( submitPressed && !this.endTimeIsValid() ) {\r\n            return 'End time must be after start time';\r\n        }\r\n\r\n        return 'What time should the outreach end?';\r\n    }\r\n\r\n    async handleSubmit(e: React.MouseEvent<HTMLElement>) {\r\n\r\n        this.setState({submitPressed: true});\r\n\r\n        const id: number = this.props.event.id as number;\r\n        const { title, startTime, endTime, date, description } = this.state;\r\n\r\n        if ( !title || !date || !startTime || !endTime || !this.endTimeIsValid() ) {\r\n            return;\r\n        }\r\n\r\n        const startHours: number = startTime.hour;\r\n        const startMinutes: number = startTime.minute;\r\n\r\n        const endHours: number = endTime.hour;\r\n        const endMinutes: number = endTime.minute;\r\n\r\n        let startDateAndTime: DateTime = date.set({hour: startHours, minute: startMinutes}).setZone('America/New_York');\r\n        let endDateAndTime: DateTime = date.set({hour: endHours, minute: endMinutes}).setZone('America/New_York');\r\n\r\n        try {\r\n\r\n            let event: Event = { id, title, start: startDateAndTime.toJSDate(), end: endDateAndTime.toJSDate(), description };\r\n\r\n            await eventAPI.updateEvent(event);\r\n\r\n            this.props.onEventUpdated(event);\r\n\r\n        }\r\n        catch ( error ) {\r\n\r\n            if ( error.response.status === 500 ) {\r\n                this.setState({internalServerError: true});\r\n            }\r\n            else {\r\n                console.error('Unhandled error'); // TODO: Handle this\r\n            }\r\n        }\r\n    }\r\n\r\n    hasInternalServerError(): boolean {\r\n        return this.state.internalServerError;\r\n    }\r\n\r\n    render() {\r\n        const { title, startTime, endTime, date, description } = this.state;\r\n        \r\n        return (\r\n            <div className=\"grayout\">\r\n                <div className=\"add-event-dialog\">\r\n                    <div className=\"dialog-header\">\r\n                        <Typography className=\"dialog-title\" variant=\"h4\">Edit Event</Typography>\r\n                    </div>\r\n                    <div className=\"dialog-body\">\r\n                        <div className=\"dialog-form\">\r\n                            <TextField value={title} error={this.titlehasErrorTxt()} onChange={this.handleTitleChange} className=\"dialog-txt-field\" label=\"Title\" variant=\"filled\" helperText=\"Enter the title of the outreach event\" inputProps={{ maxLength: 64 }} />\r\n\r\n                            <MuiPickersUtilsProvider utils={LuxonUtils}>\r\n                                <DatePicker\r\n                                    error={this.datehasErrorTxt()}\r\n                                    className=\"dialog-picker-field\"\r\n                                    inputVariant=\"filled\"\r\n                                    format=\"MM/dd/yyyy\"\r\n                                    value={date}\r\n                                    margin=\"normal\"\r\n                                    label=\"Start Date\"\r\n                                    onChange={this.handleDateChange}\r\n                                    helperText=\"What date should the outreach be on?\"\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <EventIcon color=\"primary\"/>\r\n                                        </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n\r\n                                <TimePicker\r\n                                    error={this.startTimehasErrorTxt()}\r\n                                    className=\"dialog-picker-field\"\r\n                                    inputVariant=\"filled\"\r\n                                    format=\"h:mm a\"\r\n                                    value={startTime}\r\n                                    margin=\"normal\"\r\n                                    label=\"Start Time\"\r\n                                    onChange={this.handleStartTimeChange}\r\n                                    helperText=\"What time should the outreach start?\"\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <AccessAlarmIcon color=\"primary\"/>\r\n                                        </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n\r\n                                <TimePicker\r\n                                    error={this.endTimehasErrorTxt()}\r\n                                    className=\"dialog-picker-field\"\r\n                                    inputVariant=\"filled\"\r\n                                    format=\"h:mm a\"\r\n                                    value={endTime}\r\n                                    margin=\"normal\"\r\n                                    label=\"End Time\"\r\n                                    onChange={this.handleEndTimeChange}\r\n                                    helperText={this.getEndTimeHelperTxt()}\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <AccessAlarmIcon color=\"primary\"/>\r\n                                        </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n\r\n                            </MuiPickersUtilsProvider>\r\n\r\n                            <TextField\r\n                                value={description}\r\n                                label=\"Description\"\r\n                                multiline\r\n                                rows={4}\r\n                                onChange={this.handleDescriptionChange}\r\n                                helperText=\"Enter the description of this event\"\r\n                                variant=\"filled\"\r\n                                inputProps={{ maxLength: 2048 }}\r\n                            />\r\n\r\n                            <FormHelperText className={`${this.hasInternalServerError() ? \"\" : \"display-none\"}`} error={true}>Uh-oh! A problem occured. Please refresh the page and try again.</FormHelperText>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"dialog-actions\">\r\n                        <Button color=\"primary\" className=\"dialog-btn\" onClick={ this.handleCancel } variant=\"contained\" size=\"medium\">Cancel</Button>\r\n                        <Button color=\"primary\" className=\"dialog-btn\" onClick={ this.handleSubmit } variant=\"contained\" size=\"medium\">Update</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditEventDialog;","import React from 'react';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { DateTime } from 'luxon';\r\n\r\nimport { Calendar, luxonLocalizer } from 'react-big-calendar';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nimport AddEventDialog from './AddEventDialog';\r\n\r\nimport ViewEventDialog from './ViewEventDialog';\r\n\r\nimport ErrorBox from './ErrorBox';\r\n\r\nimport Event from '../models/Event';\r\n\r\n\r\nimport './Schedule.css';\r\n\r\nimport * as eventAPI from '../api/event';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport EditEventDialog from './EditEventDialog';\r\n\r\n\r\ntype ScheduleProps = {};\r\ntype ScheduleState = {\r\n    currentEvent: Event | null,\r\n    addEventDialogOpen: boolean,\r\n    events: Event[],\r\n    eventsLoaded: boolean,\r\n    errorLoadingEvents: boolean,\r\n    deleteEventSnackbarOpen: boolean,\r\n    successAddEventSnackbarOpen: boolean,\r\n    editEventDialogEvent: Event | null,\r\n    updateEventSnackbarOpen: boolean\r\n};\r\n\r\n\r\n\r\nclass Schedule extends React.Component<ScheduleProps, ScheduleState> {\r\n    constructor(props: ScheduleProps) {\r\n        super(props);\r\n\r\n        this.state = { \r\n            currentEvent: null, // Not null to open viewEventDialog. TODO: refactor this\r\n            addEventDialogOpen: false,\r\n            events: [],\r\n            eventsLoaded: false,\r\n            errorLoadingEvents: false,\r\n            deleteEventSnackbarOpen: false,\r\n            successAddEventSnackbarOpen: false,\r\n            editEventDialogEvent: null,\r\n            updateEventSnackbarOpen: false\r\n            \r\n        };\r\n\r\n        // TODO: These are absolutely in no order\r\n\r\n        this.eventClicked = this.eventClicked.bind(this);\r\n\r\n        this.eventDeleted = this.eventDeleted.bind(this);\r\n\r\n        this.openEditDialog = this.openEditDialog.bind(this);\r\n        this.closeEditEventDialog = this.closeEditEventDialog.bind(this);\r\n\r\n        this.eventAdded = this.eventAdded.bind(this);\r\n\r\n        this.openViewEventDialog = this.openViewEventDialog.bind(this);\r\n        this.closeViewEventDialog = this.closeViewEventDialog.bind(this);\r\n        this.eventUpdated = this.eventUpdated.bind(this);\r\n        this.handleCloseUpdateEventSnackbar = this.handleCloseUpdateEventSnackbar.bind(this);\r\n\r\n        this.openAddEventDialog = this.openAddEventDialog.bind(this);\r\n        this.closeAddEventDialog = this.closeAddEventDialog.bind(this);\r\n\r\n        this.handleCloseAddEventSnackbar = this.handleCloseAddEventSnackbar.bind(this);\r\n        this.handleUndoAddEvent = this.handleUndoAddEvent.bind(this);\r\n\r\n        this.handleCloseDeleteEventSnackbar = this.handleCloseDeleteEventSnackbar.bind(this);\r\n        this.handleUndoDeleteEvent = this.handleUndoDeleteEvent.bind(this);\r\n    }\r\n\r\n    async componentWillMount() {\r\n        this.loadEvents();\r\n    }\r\n\r\n    async loadEvents() {\r\n        try {\r\n            let result = await eventAPI.getEvents();\r\n            let events: any = result.data;\r\n\r\n            events.forEach((event: any) => {\r\n                event.start = DateTime.fromISO(event.start).toJSDate();\r\n                event.end = DateTime.fromISO(event.end).toJSDate();\r\n            });\r\n\r\n            this.setState({events, eventsLoaded: true });\r\n        }\r\n        catch(e) {\r\n            console.error(\"error=\",e)\r\n            this.setState({errorLoadingEvents: true});\r\n        }\r\n    }\r\n\r\n    eventClicked(event: Event, e: any /*: SyntheticEvent*/) {\r\n        this.openViewEventDialog(event);\r\n    }\r\n\r\n    openViewEventDialog(event: Event) {\r\n        this.setState({currentEvent: event});\r\n    }\r\n\r\n    closeViewEventDialog() {\r\n        this.setState({currentEvent: null});\r\n    }\r\n\r\n    openAddEventDialog() {\r\n        this.setState({addEventDialogOpen: true});\r\n    }\r\n\r\n    closeAddEventDialog() {\r\n        this.setState({ addEventDialogOpen: false});\r\n    }\r\n\r\n    handleCloseDeleteEventSnackbar(event: React.SyntheticEvent<any>) {\r\n        this.setState({deleteEventSnackbarOpen: false})\r\n    }\r\n\r\n    handleUndoAddEvent(event: React.SyntheticEvent<any>) {\r\n        // TODO:\r\n    }\r\n\r\n    handleCloseAddEventSnackbar(event: React.SyntheticEvent<any>) {\r\n        this.setState({successAddEventSnackbarOpen: false})\r\n    }\r\n\r\n    handleUndoDeleteEvent(event: React.SyntheticEvent<any>) {\r\n        // TODO:\r\n    }\r\n\r\n    eventDeleted(id: number) {\r\n        let events: Event[] = this.state.events;\r\n        events = events.filter(event => event.id !== id);\r\n\r\n        this.setState({events, deleteEventSnackbarOpen: true});\r\n\r\n        this.closeViewEventDialog();\r\n    }\r\n\r\n    openEditDialog(id: number) {\r\n        let events: Event[] = this.state.events;\r\n        let event: Event = events.find((event) => event.id === id) as Event;\r\n\r\n        this.closeViewEventDialog();\r\n\r\n        // TODO: This should be in a different function\r\n        this.setState({ editEventDialogEvent: event});\r\n    }\r\n\r\n    closeEditEventDialog() {\r\n        this.setState({editEventDialogEvent: null});\r\n    }\r\n\r\n    eventUpdated(updatedEvent: Event) {\r\n        let events: Event[] = this.state.events;\r\n        let index: number = events.findIndex((event) => event.id == updatedEvent.id);\r\n\r\n        events[index] = updatedEvent;\r\n\r\n        this.setState({events, updateEventSnackbarOpen: true });\r\n\r\n        this.closeEditEventDialog();\r\n        this.openViewEventDialog(updatedEvent);\r\n    }\r\n\r\n    handleCloseUpdateEventSnackbar() {\r\n        this.setState({updateEventSnackbarOpen: false});\r\n    }\r\n\r\n    eventAdded(event: Event) {\r\n        let events: Event[] = this.state.events;\r\n        events.push(event);\r\n        \r\n        this.setState({events, successAddEventSnackbarOpen: true})\r\n        \r\n        this.closeAddEventDialog();\r\n    }\r\n\r\n    render() {\r\n        const localizer = luxonLocalizer(DateTime);\r\n\r\n        let events: Event[] = this.state.events;\r\n\r\n        const { successAddEventSnackbarOpen, deleteEventSnackbarOpen, currentEvent, addEventDialogOpen, eventsLoaded, errorLoadingEvents, editEventDialogEvent, updateEventSnackbarOpen } = this.state;\r\n        \r\n        const calendar = () => {\r\n            if (eventsLoaded) {\r\n                return (\r\n                    <Calendar\r\n                    localizer={localizer}\r\n                    events={events}\r\n                    style={{ height: 500 }}\r\n                    onSelectEvent={this.eventClicked}\r\n                    />\r\n                );\r\n            }\r\n\r\n            return (null);\r\n        }\r\n\r\n        const spinner = () => {\r\n            if ( !eventsLoaded && !errorLoadingEvents) {\r\n                return (\r\n                    <div className=\"spinner-container\">\r\n                        <CircularProgress size=\"4rem\" color=\"primary\"/>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return (null);\r\n        }\r\n\r\n        const loadingError = () => {\r\n            if ( errorLoadingEvents ) {\r\n                return (\r\n                    <ErrorBox message=\"Couldn't load events! Try refreshing the page.\" />\r\n                );\r\n            }\r\n\r\n            return (null);\r\n        }\r\n\r\n        const viewEventDialog = () => {\r\n            if (currentEvent) {\r\n                return (\r\n                    <ViewEventDialog event={currentEvent} onDelete={this.eventDeleted} onEdit={this.openEditDialog}  onCancel={this.closeViewEventDialog} />\r\n                );\r\n            }\r\n        }\r\n\r\n        const addEventDialog = () => {\r\n            if (addEventDialogOpen) {\r\n                return (\r\n                    <AddEventDialog onEventAdded={this.eventAdded} onCancel={this.closeAddEventDialog} />\r\n                );\r\n            }\r\n\r\n            return (null);\r\n        }\r\n\r\n        const editEventDialog = () => {\r\n            if ( editEventDialogEvent ) {\r\n                return (\r\n                    <EditEventDialog event={editEventDialogEvent} onCancel={this.closeEditEventDialog} onEventUpdated={this.eventUpdated} />\r\n                )\r\n            }\r\n\r\n            return (null);\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"page-container\">\r\n                <div className=\"page\">\r\n                    <Typography className=\"page-header\" color=\"primary\" variant=\"h3\">Upcoming Events</Typography>\r\n\r\n                    {calendar()}\r\n                    {loadingError()}\r\n                    {spinner()}\r\n                    {viewEventDialog()}\r\n                    {addEventDialog()}\r\n                    {editEventDialog()}\r\n                    \r\n                    <Fab onClick={this.openAddEventDialog} className=\"add-event\" size=\"medium\"  aria-label=\"Add Event\" >\r\n                        <AddIcon color=\"primary\" />\r\n                    </Fab>\r\n                </div>\r\n                \r\n                <Snackbar\r\n                    open={successAddEventSnackbarOpen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.handleCloseAddEventSnackbar}\r\n                    message=\"Event Added\"\r\n                    action={\r\n                        <React.Fragment>\r\n                            {/* <Button color=\"secondary\" size=\"small\" onClick={this.handleUndoAddEvent}>UNDO</Button> */}\r\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"secondary\" onClick={this.handleCloseAddEventSnackbar}>\r\n                                <CloseIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </React.Fragment>\r\n                    }\r\n                />\r\n\r\n                <Snackbar\r\n                    open={deleteEventSnackbarOpen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.handleCloseDeleteEventSnackbar}\r\n                    message=\"Event Deleted\"\r\n                    action={\r\n                        <React.Fragment>\r\n                            {/* <Button color=\"secondary\" size=\"small\" onClick={this.handleUndoDeleteEvent}>UNDO</Button> */}\r\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"secondary\" onClick={this.handleCloseDeleteEventSnackbar}>\r\n                                <CloseIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </React.Fragment>\r\n                    }\r\n                />\r\n\r\n                <Snackbar\r\n                    open={updateEventSnackbarOpen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.handleCloseUpdateEventSnackbar}\r\n                    message=\"Event Updated\"\r\n                    action={\r\n                        <React.Fragment>\r\n                            {/* <Button color=\"secondary\" size=\"small\" onClick={this.handleUndoDeleteEvent}>UNDO</Button> */}\r\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"secondary\" onClick={this.handleCloseUpdateEventSnackbar}>\r\n                                <CloseIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </React.Fragment>\r\n                    }\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Schedule;","import axios, { AxiosResponse } from 'axios';\r\nimport Cookies from 'universal-cookie';\r\n\r\nexport const register = (email: string, password: string): Promise<AxiosResponse<any>> => {\r\n    return axios.post('/api/users', {\r\n        email, password\r\n    });\r\n}\r\n\r\nexport const login = (email: string, password: string): Promise<AxiosResponse<any>> => {\r\n    return axios.post('/api/users/login', {\r\n        email, password\r\n    });\r\n}\r\n\r\nexport const logout = (): Promise<AxiosResponse<any>> => {\r\n    return axios.delete('/api/users/logout');\r\n}\r\n\r\nexport const hasLoginCookie = (): boolean => {\r\n    const cookies: Cookies = new Cookies();\r\n    return cookies.get('jwt') ? true : false;\r\n}","\r\nimport axios, { AxiosResponse } from 'axios';\r\n\r\n\r\n\r\nexport const findAccount = (account: string): Promise<AxiosResponse<any>> => {\r\n    return axios.get(`/api/users/findaccount/${account}`);\r\n}\r\n\r\n\r\nexport const sendResetCode = (email: string, selectedContactMethod: string): Promise<AxiosResponse<any>> => {\r\n    return axios.post('/api/users/sendresetcode', {\r\n        email, selectedContactMethod\r\n    });\r\n}\r\n\r\nexport const checkResetCode = (email: string, resetCode: string): Promise<AxiosResponse<any>> => {\r\n    return axios.get('/api/users/checkresetcode', {\r\n\r\n        params: {\r\n            email,\r\n            resetCode\r\n            }\r\n    });\r\n}\r\n\r\nexport const changePassword = (email: string, password: string, resetCode: string): Promise<AxiosResponse<any>> => {\r\n    return axios.post('/api/users/changepassword', {\r\n        email,\r\n        password,\r\n        resetCode\r\n    });\r\n}\r\n\r\nexport const getCurrentUser = (): Promise<AxiosResponse<any>> =>  {\r\n    return axios.get('/api/users/me');\r\n}\r\n\r\nexport const updateNameFirst = (id: number, nameFirst: string): Promise<AxiosResponse<any>> => {\r\n    return axios.patch('/api/users/namefirst', { id, nameFirst });\r\n}\r\n\r\nexport const updateNameLast = (id: number, nameLast: string): Promise<AxiosResponse<any>> => {\r\n    return axios.patch('/api/users/namelast', { id, nameLast });\r\n}\r\n\r\nexport const updatePhoneNumber = (id: number, phoneNumber: string): Promise<AxiosResponse<any>> => {\r\n    return axios.patch('/api/users/phonenumber', { id, phoneNumber });\r\n}","import React, { Component } from \"react\";\r\nimport * as auth from '../api/auth';\r\n\r\nconst { Provider, Consumer } = React.createContext();\r\n\r\nclass AuthContextProvider extends Component {\r\n  state = {\r\n    isLoggedIn: auth.hasLoginCookie()\r\n  };\r\n\r\n  login = () => {\r\n    this.setState({ isLoggedIn: true})\r\n  };\r\n\r\n  logout = () => {\r\n    this.setState({ isLoggedIn: false})\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Provider value={{ isLoggedIn: this.state.isLoggedIn, login: this.login, logout: this.logout }}>\r\n        {this.props.children}\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport { AuthContextProvider, Consumer as AuthContextConsumer };\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nimport DoneIcon from '@material-ui/icons/Done';\r\n\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport ErrorBox from './ErrorBox';\r\n\r\n\r\nimport User from '../models/User';\r\nimport * as auth from '../api/auth';\r\nimport * as userAPI from '../api/user';\r\n\r\nimport './AccountSettings.css';\r\n\r\n\r\nimport { AuthContextConsumer } from '../contexts/authContext';\r\n\r\ntype AccountSettingsState = {\r\n    user: User | undefined,\r\n    couldNotLoadUser: boolean,\r\n    editingFirstName: boolean,\r\n    editingLastName: boolean,\r\n    editingPhone: boolean,\r\n    updateError: boolean,\r\n    updateSuccessSnackbarOpen: boolean,\r\n    snackbarText: string,\r\n    nameFirstFormValue: string,\r\n    nameLastFormValue: string,\r\n    phoneNumberFormValue: string,\r\n}\r\n\r\ntype AccountSettingsProps = {\r\n    history: any;\r\n}\r\n\r\nclass AccountSettings extends React.Component<AccountSettingsProps, AccountSettingsState> {\r\n\r\n    constructor(props: AccountSettingsProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: undefined,\r\n            couldNotLoadUser: false,\r\n            editingFirstName: false,\r\n            editingLastName: false,\r\n            editingPhone: false,\r\n            updateError: false,\r\n            updateSuccessSnackbarOpen: false,\r\n            snackbarText: '',\r\n            nameFirstFormValue: '',\r\n            nameLastFormValue: '',\r\n            phoneNumberFormValue: '',\r\n        };\r\n\r\n        this.getUser();\r\n\r\n        this.editFirstName = this.editFirstName.bind(this);\r\n        this.cancelEditFirstName = this.cancelEditFirstName.bind(this);\r\n        this.saveFirstName = this.saveFirstName.bind(this);\r\n        this.handleChangeFirstNameFormValue = this.handleChangeFirstNameFormValue.bind(this);\r\n\r\n        this.editLastName = this.editLastName.bind(this);\r\n        this.cancelEditLastName = this.cancelEditLastName.bind(this);\r\n        this.saveLastName = this.saveLastName.bind(this);\r\n        this.handleChangeLastNameFormValue = this.handleChangeLastNameFormValue.bind(this);\r\n\r\n        this.editPhone = this.editPhone.bind(this);\r\n        this.cancelEditPhone = this.cancelEditPhone.bind(this);\r\n        this.savePhone = this.savePhone.bind(this);\r\n        this.handleChangePhoneFormValue = this.handleChangePhoneFormValue.bind(this);\r\n\r\n        this.handleCloseSnackbar = this.handleCloseSnackbar.bind(this);\r\n    }\r\n\r\n    async getUser() {\r\n        try {\r\n            let result = await userAPI.getCurrentUser();\r\n            let user: User = result.data;\r\n\r\n            // Need to keep track of their last saved value since if the user hits cancel we want to revert\r\n            this.setState({\r\n                user,\r\n                nameFirstFormValue: user.nameFirst,\r\n                nameLastFormValue: user.nameLast,\r\n                phoneNumberFormValue: user.phoneNumber\r\n            });\r\n        }\r\n        catch(e) {\r\n            console.error(\"error=\",e)\r\n            this.setState({couldNotLoadUser: true});\r\n        }\r\n    }\r\n\r\n    editFirstName() {\r\n        this.setState({ editingFirstName: true, editingLastName: false, editingPhone: false });\r\n    }\r\n\r\n    async saveFirstName() {\r\n        let user: User | undefined = this.state.user;\r\n        const { nameFirstFormValue } = this.state;\r\n\r\n        if (!user) {\r\n            return;\r\n        }\r\n\r\n        const { id } = user;\r\n\r\n        try {\r\n            await userAPI.updateNameFirst(id as number, nameFirstFormValue);\r\n\r\n            user.nameFirst = nameFirstFormValue;\r\n            \r\n            this.setState({\r\n                user,\r\n                editingFirstName: false,\r\n                updateError: false,\r\n                updateSuccessSnackbarOpen: true,\r\n                snackbarText: 'First Name Updated'\r\n            });\r\n        }\r\n        catch ( error ) {\r\n            this.setState({updateError: true, updateSuccessSnackbarOpen: false});\r\n        }\r\n    }\r\n\r\n    handleChangeFirstNameFormValue(e: any) {\r\n        this.setState({nameFirstFormValue: e.target.value});\r\n    }\r\n\r\n    cancelEditFirstName() {\r\n        const user: User = this.state.user as User;\r\n\r\n        this.setState({\r\n            editingFirstName: false,\r\n            nameFirstFormValue: user.nameFirst\r\n        });\r\n    }\r\n\r\n    editLastName() {\r\n        this.setState({ editingLastName: true, editingFirstName: false, editingPhone: false });\r\n    }\r\n\r\n    cancelEditLastName() {\r\n        const user: User = this.state.user as User;\r\n\r\n        this.setState({\r\n            editingLastName: false,\r\n            nameLastFormValue: user.nameLast\r\n        });\r\n    }\r\n\r\n    async saveLastName() {\r\n        let user: User | undefined = this.state.user;\r\n        const { nameLastFormValue } = this.state;\r\n\r\n        if (!user) {\r\n            return;\r\n        }\r\n\r\n        const { id } = user;\r\n\r\n        try {\r\n            await userAPI.updateNameLast(id as number, nameLastFormValue);\r\n\r\n            user.nameLast = nameLastFormValue;\r\n            \r\n            this.setState({\r\n                user,\r\n                editingLastName: false,\r\n                updateError: false,\r\n                updateSuccessSnackbarOpen: true,\r\n                snackbarText: 'Last Name Updated'\r\n            });\r\n        }\r\n        catch ( error ) {\r\n            this.setState({updateError: true, updateSuccessSnackbarOpen: false});\r\n        }\r\n    }\r\n\r\n    handleChangeLastNameFormValue(e: any) {\r\n        this.setState({nameLastFormValue: e.target.value});\r\n    }\r\n\r\n    editPhone() {\r\n        this.setState({ editingPhone: true, editingFirstName: false, editingLastName: false });\r\n    }\r\n\r\n    cancelEditPhone() {\r\n        const user: User = this.state.user as User;\r\n\r\n        this.setState({\r\n            editingPhone: false,\r\n            phoneNumberFormValue: user.phoneNumber\r\n        });\r\n    }\r\n\r\n    async savePhone() {\r\n        let user: User | undefined = this.state.user;\r\n        const { phoneNumberFormValue } = this.state;\r\n\r\n        if (!user) {\r\n            return;\r\n        }\r\n\r\n        const { id } = user;\r\n\r\n        try {\r\n            await userAPI.updatePhoneNumber(id as number, phoneNumberFormValue);\r\n\r\n            user.phoneNumber = phoneNumberFormValue;\r\n            \r\n            this.setState({\r\n                user,\r\n                editingPhone: false,\r\n                updateError: false,\r\n                updateSuccessSnackbarOpen: true,\r\n                snackbarText: 'Phone Number Updated'\r\n            });\r\n        }\r\n        catch ( error ) {\r\n            this.setState({updateError: true, updateSuccessSnackbarOpen: false});\r\n        }\r\n    }\r\n\r\n    handleChangePhoneFormValue(e: any) {\r\n        this.setState({phoneNumberFormValue: e.target.value});\r\n    }\r\n\r\n    handleCloseSnackbar(event: React.SyntheticEvent<any>) {\r\n        this.setState({updateSuccessSnackbarOpen: false});\r\n    }\r\n\r\n    handleLogout(callback: any) {\r\n        try {\r\n            auth.logout();\r\n\r\n            callback();\r\n\r\n            this.props.history.push('/login');\r\n        }\r\n        catch(error) {\r\n            console.log('error',error)\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            couldNotLoadUser,\r\n            editingFirstName,\r\n            editingLastName,\r\n            editingPhone,\r\n            updateError,\r\n            updateSuccessSnackbarOpen,\r\n            snackbarText,\r\n            nameFirstFormValue,\r\n            nameLastFormValue,\r\n            phoneNumberFormValue\r\n        } = this.state;\r\n\r\n        if ( couldNotLoadUser ) {\r\n            return (\r\n                <div className=\"page-container\">\r\n                    <div className=\"page\">\r\n                        <Typography className=\"page-header\" color=\"primary\" variant=\"h3\">Account Settings</Typography>\r\n                        <ErrorBox message=\"Uh-oh, we couldn't load your profile. Try refreshing the page.\" />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const user: User | undefined = this.state.user;\r\n\r\n        if ( !user ) {\r\n            return (\r\n                <div className=\"page-container\">\r\n                    <div className=\"page\">\r\n                        <Typography className=\"page-header\" color=\"primary\" variant=\"h3\">Account Settings</Typography>\r\n                        <div className=\"spinner-container\">\r\n                            <CircularProgress size=\"4rem\" color=\"primary\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const { nameFirst, nameLast, email, phoneNumber } = user;\r\n\r\n        // TODO: Rename this\r\n        const firstNameValuePortion = () => {\r\n            if (!editingFirstName) {\r\n                return (nameFirst);\r\n            }\r\n\r\n            return (\r\n                <TextField onChange={this.handleChangeFirstNameFormValue} value={nameFirstFormValue} label=\"First Name\" variant=\"filled\" helperText=\"Enter first name\"  inputProps={{ maxLength: 50}} />\r\n            );\r\n        }\r\n\r\n        const firstNameButtons = () => {\r\n            if (!editingFirstName) {\r\n                return (\r\n                    <div className=\"edit-field-icon-btn-container\">\r\n                        <IconButton onClick={this.editFirstName} className=\"edit-field-icon-btn\" aria-label=\"edit\" color=\"primary\">\r\n                            <EditIcon className=\"edit-field-icon\" />\r\n                        </IconButton>\r\n                        <div className=\"edit-label\">Change</div>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div className=\"edit-field-icon-btn-container\">\r\n                    <div className=\"save-cancel-btns-container\">\r\n                        <IconButton onClick={this.cancelEditFirstName} className=\"edit-field-icon-btn\" aria-label=\"cancel\" color=\"primary\">\r\n                            <CloseIcon className=\"edit-field-icon\" />\r\n                        </IconButton>\r\n                        <div className=\"edit-label\">Cancel</div>\r\n                    </div>\r\n                    <div className=\"save-cancel-btns-container\">\r\n                        <IconButton onClick={this.saveFirstName} className=\"edit-field-icon-btn\" aria-label=\"save\" color=\"primary\">\r\n                            <DoneIcon className=\"edit-field-icon\" />\r\n                        </IconButton>\r\n                        <div className=\"edit-label\">Save</div>\r\n                    </div>\r\n            </div>\r\n            )\r\n        }\r\n\r\n        // TODO: Rename this\r\n        const lastNameValuePortion = () => {\r\n            if (!editingLastName) {\r\n                return (nameLast);\r\n            }\r\n\r\n            return (\r\n                <TextField onChange={this.handleChangeLastNameFormValue} value={nameLastFormValue} label=\"Last Name\" variant=\"filled\" helperText=\"Enter last name\" inputProps={{ maxLength: 50}} />\r\n            );\r\n        }\r\n\r\n        const lastNameButtons = () => {\r\n            if (!editingLastName) {\r\n                return (\r\n                    <div className=\"edit-field-icon-btn-container\">\r\n                        <IconButton onClick={this.editLastName} className=\"edit-field-icon-btn\" aria-label=\"edit\" color=\"primary\">\r\n                            <EditIcon className=\"edit-field-icon\" />\r\n                        </IconButton>\r\n                        <div className=\"edit-label\">Change</div>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div className=\"edit-field-icon-btn-container\">\r\n                    <div className=\"save-cancel-btns-container\">\r\n                        <IconButton onClick={this.cancelEditLastName} className=\"edit-field-icon-btn\" aria-label=\"cancel\" color=\"primary\">\r\n                            <CloseIcon className=\"edit-field-icon\" />\r\n                        </IconButton>\r\n                        <div className=\"edit-label\">Cancel</div>\r\n                    </div>\r\n                    <div className=\"save-cancel-btns-container\">\r\n                        <IconButton onClick={this.saveLastName} className=\"edit-field-icon-btn\" aria-label=\"save\" color=\"primary\">\r\n                            <DoneIcon className=\"edit-field-icon\" />\r\n                        </IconButton>\r\n                        <div className=\"edit-label\">Save</div>\r\n                    </div>\r\n            </div>\r\n            )\r\n        }\r\n\r\n        // TODO: Rename this\r\n        const phoneValuePortion = () => {\r\n            if (!editingPhone) {\r\n                return ( phoneNumber );\r\n            }\r\n\r\n            return (\r\n                <TextField onChange={this.handleChangePhoneFormValue} value={phoneNumberFormValue} label=\"Phone Number\" variant=\"filled\" helperText=\"Enter phone #\" inputProps={{ maxLength: 10, type: \"tel\" }} />\r\n            );\r\n        }\r\n\r\n        const phoneButtons = () => {\r\n            if (!editingPhone) {\r\n                return (\r\n                    <div className=\"edit-field-icon-btn-container\">\r\n                        <IconButton onClick={this.editPhone} className=\"edit-field-icon-btn\" aria-label=\"edit\" color=\"primary\">\r\n                            <EditIcon className=\"edit-field-icon\" />\r\n                        </IconButton>\r\n                        <div className=\"edit-label\">Change</div>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div className=\"edit-field-icon-btn-container\">\r\n                    <div className=\"save-cancel-btns-container\">\r\n                        <IconButton onClick={this.cancelEditPhone} className=\"edit-field-icon-btn\" aria-label=\"cancel\" color=\"primary\">\r\n                            <CloseIcon className=\"edit-field-icon\" />\r\n                        </IconButton>\r\n                        <div className=\"edit-label\">Cancel</div>\r\n                    </div>\r\n                    <div className=\"save-cancel-btns-container\">\r\n                        <IconButton onClick={this.savePhone} className=\"edit-field-icon-btn\" aria-label=\"save\" color=\"primary\">\r\n                            <DoneIcon className=\"edit-field-icon\" />\r\n                        </IconButton>\r\n                        <div className=\"edit-label\">Save</div>\r\n                    </div>\r\n            </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"page-container\">\r\n                <div className=\"page\">\r\n                    <Typography className=\"page-header\" color=\"primary\" variant=\"h3\">Account Settings</Typography>\r\n\r\n                    <div className=\"account-settings-form\">\r\n                        <div className=\"field-container\"> \r\n                            <div className=\"field-name\">Email</div>\r\n                            \r\n                            <div className=\"field-value\">{email}</div>\r\n\r\n                            <div className=\"edit-field-icon-btn-container\">\r\n                                <div className=\"edit-label\"></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Divider />\r\n\r\n                        <div className={`${editingFirstName ? 'field-container-highlighted' : ''} field-container`}>\r\n                            <div className=\"field-name\">First Name</div>\r\n\r\n                            <div className=\"field-value\">\r\n                                {firstNameValuePortion()}\r\n                            </div>\r\n\r\n                            {firstNameButtons()}\r\n                        </div>\r\n\r\n                        <Divider />\r\n\r\n                        <div className={`${editingLastName ? 'field-container-highlighted' : ''} field-container`}>\r\n                            <div className=\"field-name\">Last Name</div>\r\n                            \r\n                            <div className=\"field-value\">\r\n                                {lastNameValuePortion()}\r\n                            </div>\r\n\r\n                            {lastNameButtons()}\r\n                        </div>\r\n\r\n                        <Divider />\r\n\r\n                        <div className={`${editingPhone ? 'field-container-highlighted' : ''} field-container`}>\r\n                            <div className=\"field-name\">Phone</div>\r\n                            \r\n                            <div className=\"field-value\">\r\n                                {phoneValuePortion()}\r\n                            </div>\r\n\r\n                            {phoneButtons()}\r\n                        </div>\r\n\r\n                        <FormHelperText className={`${updateError ? \"\" : \"display-none\"}`} error={true}>Uh-oh! A problem occured. Please refresh the page and try again.</FormHelperText>\r\n\r\n                    </div>\r\n\r\n                    <AuthContextConsumer>\r\n                    {context => (\r\n                        <Button onClick={ e => this.handleLogout(context.logout)} className=\"logout-btn\" variant=\"contained\" color=\"primary\" size=\"medium\">Logout</Button>\r\n                    )}\r\n                    </AuthContextConsumer>\r\n                </div>\r\n\r\n                <Snackbar\r\n                    open={updateSuccessSnackbarOpen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.handleCloseSnackbar}\r\n                    message={snackbarText}\r\n                    action={\r\n                        <React.Fragment>\r\n                            {/* <Button color=\"secondary\" size=\"small\" onClick={this.handleUndoAddEvent}>UNDO</Button> */}\r\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"secondary\" onClick={this.handleCloseSnackbar}>\r\n                                <CloseIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </React.Fragment>\r\n                    }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AccountSettings;","import './Splash.css';\r\n\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n// TODO: move typography font-weight: 400 to theme\r\nfunction Splash() {\r\n    return (\r\n      <div className=\"landing-page-container\">\r\n        <div className=\"info-box\">\r\n          <Typography className=\"splash-header\" color=\"primary\" variant=\"h1\">Homeless Helper</Typography>\r\n          <div className=\"description\">Helping you organize your missionary work for the homeless one page at a time.</div>\r\n          <Link className=\"no-underline\" to=\"/features/schedule\">\r\n            <Button variant=\"contained\" color=\"primary\" className=\"start-btn\">Get Started</Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default Splash;","import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport PasswordInput from './PasswordInput';\r\n\r\nimport * as auth from '../api/auth';\r\n\r\nimport { AuthContextConsumer } from '../contexts/authContext';\r\n\r\n\r\nimport './Login.css';\r\n\r\nenum LoginFailureType {\r\n    BAD_EMAIL_PASSWORD,\r\n    INTERNAL_SERVER_ERROR,\r\n    ACCOUNT_LOCKED,\r\n    NONE\r\n}\r\n\r\ntype LoginState = {\r\n    email: string,\r\n    password: string,\r\n    submitIsTouched: boolean,\r\n    loginFailureType: LoginFailureType\r\n}\r\n\r\ntype LoginProps = {\r\n    history: any\r\n}\r\n\r\nclass Login extends React.Component<LoginProps, LoginState> {\r\n    constructor(props: LoginProps) {\r\n        super(props);\r\n\r\n        this.state = { email: '', password: '', submitIsTouched: false, loginFailureType: LoginFailureType.NONE };\r\n        \r\n        this.handleEmailChange = this.handleEmailChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this); \r\n    }\r\n\r\n    handleEmailChange(e: any) {\r\n        const email = e.target.value;\r\n        this.setState({email});\r\n    }\r\n\r\n    emailHasError(): boolean {\r\n        const { email, submitIsTouched } = this.state;\r\n        return email.length === 0 && submitIsTouched;\r\n    }\r\n    \r\n    handlePasswordChange(e: any) {\r\n        const password = e.target.value;\r\n        this.setState({password});\r\n    }\r\n\r\n    passwordHasError(): boolean {\r\n        const { password, submitIsTouched } = this.state;\r\n        return password.length === 0 && submitIsTouched;\r\n    }\r\n\r\n    hasFormError(): boolean {\r\n        return this.state.loginFailureType !== LoginFailureType.NONE;\r\n    }\r\n\r\n    getFormErrorText() {\r\n        if (this.state.loginFailureType === LoginFailureType.BAD_EMAIL_PASSWORD) {\r\n            return 'The password you’ve entered is incorrect.';\r\n        }\r\n        else if ( this.state.loginFailureType === LoginFailureType.INTERNAL_SERVER_ERROR ) {\r\n            return 'Uh-oh! A problem occured. Please refresh the page and try again.';\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    async handleSubmit(callback: any) {\r\n        const { email, password } = this.state;\r\n\r\n        this.setState({submitIsTouched: true, loginFailureType: LoginFailureType.NONE});\r\n\r\n        if ( email.length === 0 || password.length === 0 ) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await auth.login(email,password);\r\n            \r\n            callback();\r\n            \r\n            this.props.history.push('/features/schedule');\r\n        }\r\n        catch ( error ) {\r\n            if ( error.response.status === 401 ) {\r\n                if ( error.response.data.message === 'Email or password is incorrect' ) { // Keep text same as client\r\n                    this.setState({loginFailureType: LoginFailureType.BAD_EMAIL_PASSWORD});\r\n                }\r\n                else if ( error.response.data.message === 'Account locked' ) { // Keep text same as server\r\n                    this.setState({loginFailureType: LoginFailureType.ACCOUNT_LOCKED});\r\n                }\r\n                else {\r\n                    console.error(\"Unknown 401 status code response\", error);\r\n                }\r\n            }\r\n            else if ( error.response.status === 500 ) {\r\n                this.setState({loginFailureType: LoginFailureType.INTERNAL_SERVER_ERROR});\r\n            }\r\n            else {\r\n                console.error('Unhandled error'); // TODO: Handle this\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if ( this.state.loginFailureType === LoginFailureType.ACCOUNT_LOCKED ) {\r\n            return (<Redirect to=\"/findaccount\"/>);\r\n        }\r\n\r\n        return (\r\n            <div className=\"auth-page-container\">\r\n                <div className=\"auth-page\">\r\n                    <Typography className=\"auth-header\" color=\"primary\" variant=\"h4\">Login to Your Account</Typography>\r\n                    <form className=\"auth-form\">\r\n                        <TextField onChange={this.handleEmailChange} className=\"auth-txt-field\" label=\"Email\" variant=\"filled\" error={this.emailHasError()} helperText=\"Enter your email\"/>\r\n                        <PasswordInput onChange={this.handlePasswordChange} inputProps={{ maxLength: 32 }} className=\"auth-txt-field\" error={this.passwordHasError()} helperText=\"Enter your password\" label=\"Password\"/>\r\n                        <AuthContextConsumer>\r\n                        {context => (\r\n                            <Button onClick={ e => this.handleSubmit(context.login)} className=\"auth-btn\" variant=\"contained\" color=\"primary\" size=\"medium\">Login</Button>\r\n                        )}\r\n                        </AuthContextConsumer>\r\n                        <FormHelperText className={`auth-err ${this.hasFormError() ? \"\" : \"display-none\"}`} error={true}>{this.getFormErrorText()}</FormHelperText>\r\n                        <div className=\"non-important-btns-container\">\r\n                            <Link className=\"no-underline\" to=\"/register\">\r\n                                <Button className=\"non-important-btn\" color=\"primary\">Create Account</Button>\r\n                            </Link>\r\n                            <Link className=\"no-underline\" to=\"/findaccount\">\r\n                                <Button className=\"non-important-btn\" color=\"primary\">Forgot Password?</Button>\r\n                            </Link>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import { InputAdornment } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport React, {Component } from 'react';\r\n\r\nimport './PasswordInput.css';\r\n\r\ntype PasswordInputState = {\r\n    passwordIsMasked: boolean\r\n}\r\n\r\n//https://itnext.io/building-a-toggled-mask-password-input-component-w-react-and-material-ui-f55e6bd73434\r\n\r\n\r\ntype PasswordInputProps = {\r\n    classes?: any,\r\n    onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n    value?: string,\r\n    error?: boolean,\r\n    helperText?: string,\r\n    label?: string,\r\n    className?: string,\r\n    inputProps?: object,\r\n}\r\n\r\nclass PasswordInput extends Component<PasswordInputProps, PasswordInputState> {\r\n    constructor(props: PasswordInputProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            passwordIsMasked: true\r\n        };\r\n    }\r\n\r\n    togglePasswordMask = () => {\r\n        this.setState(prevState => ({\r\n            passwordIsMasked: !prevState.passwordIsMasked\r\n        }));\r\n    }\r\n\r\n    getVisibilityIcon() {\r\n        if ( this.state.passwordIsMasked ) {\r\n            return (\r\n                <VisibilityIcon color=\"primary\" onClick={this.togglePasswordMask} className=\"clickable-icon\"/>\r\n            );\r\n        }\r\n        \r\n        return (\r\n            <VisibilityOffIcon color=\"primary\" onClick={this.togglePasswordMask} className=\"clickable-icon\"/>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { passwordIsMasked } = this.state;\r\n\r\n        return (\r\n            <TextField\r\n                variant=\"filled\"\r\n                type={passwordIsMasked ? 'password' : 'text'}\r\n                {...this.props}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            {this.getVisibilityIcon()}\r\n                        </InputAdornment>\r\n                    ),\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default PasswordInput;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport * as userAPI from '../api/user';\r\n\r\nimport './FindAccount.css';\r\n\r\ntype FindAccountState = {\r\n    contact: string,\r\n    searchAccountFailureType: SearchAccountFailureType,\r\n    submitIsTouched: boolean\r\n}\r\n\r\ntype FindAccountProps = {\r\n    history: any\r\n}\r\n\r\nenum SearchAccountFailureType {\r\n    ACCOUNT_NOT_FOUND,\r\n    INTERNAL_SERVER_ERROR,\r\n    NONE\r\n}\r\n\r\nclass FindAccount extends React.Component<FindAccountProps, FindAccountState> {\r\n\r\n    constructor(props: FindAccountProps) {\r\n        super(props);\r\n\r\n        this.state = { contact: '', searchAccountFailureType: SearchAccountFailureType.NONE, submitIsTouched: false };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleContactChange = this.handleContactChange.bind(this);\r\n    }\r\n\r\n    handleContactChange(e: any) {\r\n        const contact = e.target.value;\r\n        this.setState({contact});\r\n    }\r\n\r\n    contactHasError(): boolean {\r\n        const { submitIsTouched, contact } = this.state;\r\n\r\n        return contact.length === 0 && submitIsTouched;\r\n    }\r\n\r\n    async handleSubmit(e: any) {\r\n        const { contact } = this.state;\r\n\r\n        this.setState({submitIsTouched: true});\r\n\r\n        if ( contact.length === 0 ) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const contactInfo: any = await (await userAPI.findAccount(contact)).data.contactInformation; // TODO: Create model for this\r\n            console.log(\"contactInfo\",contactInfo)\r\n            this.setState({searchAccountFailureType: SearchAccountFailureType.NONE, submitIsTouched: false});\r\n            this.props.history.push(`/pickresetmethod?email=${contactInfo.email}&phone=${contactInfo.phone}`); // TODO: Change this\r\n        }\r\n        catch(error) {\r\n            if ( error.response.status === 404 ) {\r\n                this.setState({searchAccountFailureType: SearchAccountFailureType.ACCOUNT_NOT_FOUND});\r\n            }\r\n            else if ( error.response.status === 500 ) {\r\n                this.setState({searchAccountFailureType: SearchAccountFailureType.INTERNAL_SERVER_ERROR});\r\n            }\r\n        }\r\n    }\r\n\r\n    displayFormError(): boolean {\r\n        return this.state.searchAccountFailureType !== SearchAccountFailureType.NONE;\r\n    }\r\n\r\n    getFormErrorText(): string {\r\n        if ( this.state.searchAccountFailureType === SearchAccountFailureType.ACCOUNT_NOT_FOUND ) {\r\n            return 'We couldnt find an account with that contact information.';\r\n        }\r\n        else if ( this.state.searchAccountFailureType === SearchAccountFailureType.INTERNAL_SERVER_ERROR ) {\r\n            return 'Internal error. Refresh the page.';\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    // TODO: auth-err really should be renamed\r\n    render() {\r\n        return (\r\n            <div className=\"auth-page-container\">\r\n                <div className=\"auth-page\">\r\n                    <Typography className=\"auth-header\" color=\"primary\" variant=\"h4\">Find Account</Typography>\r\n                    <form className=\"auth-form\">\r\n                        <FormHelperText className=\"forgot-pw-desc\">Enter your email or phone number to search for your account.</FormHelperText>\r\n                        <TextField onChange={this.handleContactChange} className=\"auth-txt-field\" label=\"Email or Phone\" variant=\"filled\" error={this.contactHasError()} helperText=\"Enter your email or phone number\"/>\r\n                        <Button onClick={ this.handleSubmit } className=\"auth-btn\" variant=\"contained\" color=\"primary\" size=\"medium\">Search</Button>\r\n                        <FormHelperText className={`auth-err ${this.displayFormError() ? \"\" : \"display-none\"}`} error={true}>{this.getFormErrorText()}</FormHelperText>\r\n                    </form>\r\n                    <div className=\"non-important-btns-container\">\r\n                        <Link className=\"no-underline\" to=\"/login\">\r\n                            <Button className=\"find-email-btn non-important-btn\" color=\"primary\">Cancel</Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FindAccount;","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport PasswordInput from './PasswordInput';\r\n\r\n\r\n\r\nimport * as auth from '../api/auth';\r\n\r\nimport { AuthContextConsumer } from '../contexts/authContext';\r\n\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nimport './Register.css';\r\n\r\ntype RegisterState = {\r\n    email: string,\r\n    password: string,\r\n    passwordIsTouched: boolean,\r\n    submitIsTouched: boolean,\r\n    emailIsTaken: boolean,\r\n    internalServerError: boolean\r\n}\r\n\r\ntype RegisterProps = {\r\n    history: any // TODO: Type\r\n}\r\n\r\nclass Register extends React.Component<RegisterProps, RegisterState> {\r\n    constructor(props: RegisterProps) {\r\n        super(props);\r\n\r\n        this.state = { email: '', password: '', passwordIsTouched: false, submitIsTouched: false, emailIsTaken: false, internalServerError: false };\r\n        \r\n        this.handleEmailChange = this.handleEmailChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this); \r\n    }\r\n\r\n    handleEmailChange(e: any) {\r\n        const email = e.target.value;\r\n        this.setState({email, emailIsTaken: false});\r\n    }\r\n\r\n    isValidEmail(): boolean {\r\n        const email = this.state.email;\r\n\r\n        const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n        return regex.test(email);\r\n    }\r\n\r\n    passwordHasCorrectLength(): boolean {\r\n        const password = this.state.password;\r\n\r\n        return password.length >= 8 && password.length <= 32;\r\n    }\r\n\r\n    // TODO: FIX THIS\r\n    // Checks if the password contains numbers, letters, and special characters\r\n    passwordIsValid(): boolean {\r\n        const password = this.state.password;\r\n\r\n        const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[^\\da-zA-Z]).{8,32}$/\r\n\r\n        return regex.test(password);\r\n    }\r\n\r\n    handlePasswordChange(e: any) {\r\n        const password = e.target.value;\r\n        this.setState({password, passwordIsTouched: true});\r\n    }\r\n\r\n    emailHasError(): boolean {\r\n        const { submitIsTouched } = this.state;\r\n\r\n        return !this.isValidEmail() && submitIsTouched;\r\n    }\r\n\r\n    getEmailHelperText(): string {\r\n        if ( this.emailHasError() ) {\r\n            return 'Please enter a valid email';\r\n        }\r\n        else if ( this.state.emailIsTaken ) {\r\n            return 'This email is taken, try another.';\r\n        }\r\n        \r\n        return 'Enter your email';\r\n    }\r\n\r\n    passwordHasError(): boolean {\r\n        const { submitIsTouched } = this.state;\r\n\r\n        return !this.passwordIsValid() && submitIsTouched;\r\n    }\r\n\r\n    getPasswordHelperText(): string {\r\n        if ( !this.passwordHasError() ) {\r\n            return 'Enter a password';\r\n        }\r\n        else if ( this.passwordHasCorrectLength() ) {\r\n            return 'Enter between 8 and 32 characters';\r\n        }\r\n    \r\n        return 'Include a letter, number, and special character';\r\n    }\r\n\r\n    hasInternalServerError(): boolean {\r\n        return this.state.internalServerError;\r\n    }\r\n\r\n    async handleSubmit(callback: any) {\r\n        const { email, password } = this.state;\r\n\r\n        this.setState({submitIsTouched: true, internalServerError: false});\r\n\r\n        if ( !this.isValidEmail() || !this.passwordIsValid() ) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await auth.register(email,password);\r\n            \r\n            callback();\r\n   \r\n            this.props.history.push('/features/schedule');\r\n        }\r\n        catch ( error ) {\r\n            if ( error.response.status === 409 ) {\r\n                this.setState({emailIsTaken: true});\r\n            }\r\n            else if ( error.response.status === 500 ) {\r\n                this.setState({internalServerError: true});\r\n            }\r\n            else {\r\n                console.error('Unhandled error'); // TODO: Handle this\r\n            }\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return (\r\n            <div className=\"auth-page-container\">\r\n                <div className=\"auth-page\">\r\n                    <Typography className=\"auth-header\" color=\"primary\" variant=\"h4\">Create a New Account</Typography>\r\n                    <form className=\"auth-form\">\r\n                        <TextField onChange={this.handleEmailChange} name=\"email\" className=\"auth-txt-field\" label=\"Email\" variant=\"filled\" error={this.emailHasError() || this.state.emailIsTaken} helperText={this.getEmailHelperText()}/>\r\n                        <PasswordInput inputProps={{ maxLength: 32 }} onChange={this.handlePasswordChange} className=\"auth-txt-field\" label=\"Password\" error={this.passwordHasError()} helperText={this.getPasswordHelperText()} />\r\n                        <AuthContextConsumer>\r\n                        {context => (\r\n                            <Button onClick={e => this.handleSubmit(context.login)} className=\"auth-btn\" variant=\"contained\" color=\"primary\" size=\"medium\">Register</Button>\r\n                        )}\r\n                        </AuthContextConsumer>\r\n                        <FormHelperText className={`auth-err ${this.hasInternalServerError() ? \"\" : \"display-none\"}`} error={true}>Uh-oh! A problem occured. Please refresh the page and try again.</FormHelperText>\r\n                        <div className=\"non-important-btns-container\">\r\n                            <Link className=\"no-underline\" to=\"/login\">\r\n                                <Button className=\"already-registered-btn non-important-btn\" color=\"primary\">Already Have an Account?</Button>\r\n                            </Link>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Radio from '@material-ui/core/Radio';\r\n\r\nimport qs from 'qs';\r\n\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\n\r\nimport * as userAPI from '../api/user';\r\n\r\nimport './PickResetMethod.css';\r\n\r\ntype PickResetMethodState = {\r\n    email: string,\r\n    phone: string,\r\n    selectedContactMethod: string,\r\n    pickResetMethodFailureType: PickResetMethodFailureType,\r\n}\r\n\r\ntype PickResetMethodProps = {\r\n    location: any,\r\n    history: any\r\n}\r\n\r\nenum PickResetMethodFailureType {\r\n    ACCOUNT_NOT_FOUND,\r\n    INTERNAL_SERVER_ERROR,\r\n    NONE\r\n}\r\n\r\nclass PickResetMethod extends React.Component<PickResetMethodProps, PickResetMethodState> {\r\n\r\n    constructor(props: PickResetMethodProps) {\r\n        super(props);\r\n\r\n        let email: any = '';\r\n        let phone: any = '';\r\n\r\n        if (qs.parse(this.props.location.search, { ignoreQueryPrefix: true })) {\r\n            email = qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).email;\r\n            phone = qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).phone;\r\n        }\r\n\r\n        this.state = { email, selectedContactMethod: 'email', phone, pickResetMethodFailureType: PickResetMethodFailureType.NONE };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n        this.setState({ selectedContactMethod: e.target.value });\r\n    }\r\n\r\n    displayFormError(): boolean {\r\n        return this.state.pickResetMethodFailureType !== PickResetMethodFailureType.NONE;\r\n    }\r\n\r\n    getFormErrorText(): string {\r\n        if (this.state.pickResetMethodFailureType === PickResetMethodFailureType.ACCOUNT_NOT_FOUND) {\r\n            return 'We couldnt find that email.';\r\n        }\r\n        else if (this.state.pickResetMethodFailureType === PickResetMethodFailureType.INTERNAL_SERVER_ERROR) {\r\n            return 'Internal error. Refresh the page.';\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    async handleSubmit(e: any) {\r\n        try {\r\n            const { email, phone, selectedContactMethod } = this.state;\r\n\r\n            this.setState({ pickResetMethodFailureType: PickResetMethodFailureType.NONE });\r\n\r\n            await userAPI.sendResetCode(email, selectedContactMethod);\r\n\r\n            this.props.history.push(`/entercode?email=${email}&phone=${phone}&selectedContactMethod=${selectedContactMethod}`);\r\n        }\r\n        catch (error) {\r\n            if (error.response.status === 404) {\r\n                this.setState({ pickResetMethodFailureType: PickResetMethodFailureType.ACCOUNT_NOT_FOUND }); // This should never actually happen, do we really need it?\r\n            }\r\n            else if (error.response.status === 500) {\r\n                this.setState({ pickResetMethodFailureType: PickResetMethodFailureType.INTERNAL_SERVER_ERROR });\r\n            }\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const { email, phone } = this.state;\r\n\r\n        let emailOption = (\r\n            <div>\r\n                <div className=\"contact\">\r\n                    <div>\r\n                        <div className=\"contact-method\">Send Code Via Email</div>\r\n                        <div className=\"contact-detail\">{this.state.email}</div>\r\n                    </div>\r\n                    <div className=\"radio-container\">\r\n                        <Radio color=\"primary\" checked={this.state.selectedContactMethod === 'email'} onChange={this.handleChange} value=\"email\" />\r\n                    </div>\r\n                </div>\r\n                <Divider className=\"contact-divider\" />\r\n            </div>\r\n        );\r\n\r\n        let phoneOption = (\r\n            <div>\r\n                <div className=\"contact\">\r\n                    <div>\r\n                        <div className=\"contact-method\">Send Code Via SMS</div>\r\n                        <div className=\"contact-detail\">{this.state.phone}</div>\r\n                    </div>\r\n                    <div className=\"radio-container\">\r\n                        <Radio color=\"primary\" checked={this.state.selectedContactMethod === 'phone'} onChange={this.handleChange} value=\"phone\" />\r\n                    </div>\r\n                </div>\r\n                <Divider className=\"contact-divider\" />\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div className=\"auth-page-container\">\r\n                <div className=\"auth-page\">\r\n                    <Typography className=\"auth-header\" color=\"primary\" variant=\"h4\">Pick Reset Method</Typography>\r\n                    <form className=\"auth-form\">\r\n                        <Paper elevation={1} className=\"find-account-icon-container\">\r\n                            <AccountCircle color=\"primary\" className=\"find-account-icon\" />\r\n                            <div>{this.state.email}</div>\r\n                        </Paper>\r\n                        <div className=\"auth-instructions desktop-only\">Select how you would like to recieve the code to reset your password.</div>\r\n                        <Divider className=\"contact-divider\" />\r\n                        {email && emailOption}\r\n                        {phone && phoneOption}\r\n                        <Button onClick={this.handleSubmit} className=\"auth-btn\" variant=\"contained\" color=\"primary\" size=\"medium\">Send Code</Button>\r\n                        <FormHelperText className={`auth-err ${this.displayFormError() ? \"\" : \"display-none\"}`} error={true}>{this.getFormErrorText()}</FormHelperText>\r\n                    </form>\r\n                    <div className=\"non-important-btns-container\">\r\n                        <Link className=\"no-underline\" to=\"/findaccount\">\r\n                            <Button className=\"find-email-btn non-important-btn\" color=\"primary\">Not You?</Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PickResetMethod;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\n\r\nimport qs from 'qs';\r\n\r\nimport * as userAPI from '../api/user';\r\n\r\nimport './EnterCode.css';\r\n\r\nenum EnterCodeStatusType {\r\n    NONE,\r\n    INVALID_PASSCODE,\r\n    CODE_EXPIRED,\r\n    TOO_MANY_ATTEMPTS,\r\n    INTERNAL_SERVER_ERROR,\r\n    RESENT_CODE\r\n}\r\n\r\ntype EnterCodeState = {\r\n    selectedContactMethod: string,\r\n    email: string,\r\n    phone: string,\r\n    submitIsTouched: boolean,\r\n    code: string,\r\n    enterCodeStatusType: EnterCodeStatusType\r\n}\r\n\r\ntype EnterCodeProps = {\r\n    location: any, // TODO: type\r\n    history: any, // TODO: type\r\n}\r\n\r\n\r\nclass EnterCode extends React.Component<EnterCodeProps, EnterCodeState> {\r\n\r\n    constructor(props: EnterCodeProps) {\r\n        super(props);\r\n\r\n        let selectedContactMethod: any = '';\r\n        let email: any = '';\r\n        let phone: any = '';\r\n\r\n        let qsParse: qs.ParsedQs = qs.parse(this.props.location.search, { ignoreQueryPrefix: true });\r\n\r\n        if ( qsParse ) {\r\n            selectedContactMethod = qsParse.selectedContactMethod;\r\n            email = qsParse.email; // Need email either way for back button\r\n            \r\n            if ( selectedContactMethod === 'phone' ) {\r\n                phone = qsParse.phone;\r\n            }\r\n        }\r\n\r\n        this.state = { selectedContactMethod, email, phone, submitIsTouched: false, code: '', enterCodeStatusType: EnterCodeStatusType.NONE };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleCodeChange = this.handleCodeChange.bind(this);\r\n        this.resendCodeClicked = this.resendCodeClicked.bind(this);\r\n    }\r\n\r\n    handleCodeChange(e: any) {\r\n        const code: string = e.target.value;\r\n        this.setState({code});\r\n    }\r\n\r\n    getCodeHelperText(): string {\r\n        if ( this.displayCodeTextFieldError() ) {\r\n            return 'Code must be 8 digits';\r\n        }\r\n\r\n        const { selectedContactMethod} = this.state;\r\n        \r\n        return `Enter the 8 digit code sent to your ${selectedContactMethod}.`;\r\n    }\r\n\r\n    codeIsValid(): boolean {\r\n        return this.state.code.length === 8;\r\n    }\r\n\r\n    displayCodeTextFieldError(): boolean {\r\n        const { submitIsTouched, code } = this.state;\r\n\r\n        if ( !submitIsTouched ) {\r\n            return false\r\n        }\r\n\r\n        return !this.codeIsValid();\r\n    }\r\n      \r\n    async handleSubmit(e: React.MouseEvent<HTMLElement>) {\r\n        this.setState({submitIsTouched: true});\r\n\r\n        if ( !this.codeIsValid() ) {\r\n            return;\r\n        }\r\n        \r\n        const { email, code, selectedContactMethod, phone } = this.state;\r\n\r\n        try {\r\n\r\n            await userAPI.checkResetCode(email, code);\r\n\r\n            this.setState({enterCodeStatusType: EnterCodeStatusType.NONE});\r\n\r\n            // TODO: should I just do history.back or something\r\n            if (selectedContactMethod === 'email') {\r\n                this.props.history.push(`/resetpassword?email=${email}&code=${code}`);\r\n            }\r\n            else {\r\n                this.props.history.push(`/resetpassword?email=${email}&code=${code}`);\r\n            }\r\n        }\r\n        catch(error) {\r\n            console.error(\"error\",error)\r\n\r\n            if ( error.response.status === 401 ) {\r\n                if ( error.response.data.message === 'Invalid email/passcode combination') {\r\n                    this.setState({enterCodeStatusType: EnterCodeStatusType.INVALID_PASSCODE});\r\n                }\r\n                else if ( error.response.data.message === 'Reset code has expired' ) {\r\n                    this.setState({enterCodeStatusType: EnterCodeStatusType.CODE_EXPIRED});\r\n                }\r\n                else if ( error.response.data.message === 'Too many failed attempts' ) {\r\n                    this.setState({enterCodeStatusType: EnterCodeStatusType.TOO_MANY_ATTEMPTS});\r\n                }\r\n            }\r\n            else { //500, 'The server encountered an unknown error.', 400, Email and/or resetCode not sent (shouldn't ever happen)\r\n                this.setState({enterCodeStatusType: EnterCodeStatusType.INTERNAL_SERVER_ERROR});\r\n            }\r\n        }\r\n    }\r\n\r\n    displayFormHelperText(): boolean {\r\n        return this.state.enterCodeStatusType !== EnterCodeStatusType.NONE;\r\n    }\r\n\r\n    getFormHelperText(): string {\r\n        const { enterCodeStatusType, selectedContactMethod, email, phone } = this.state;\r\n\r\n        if ( enterCodeStatusType === EnterCodeStatusType.INVALID_PASSCODE ) {\r\n            return 'Wrong code, try again.';\r\n        }\r\n        else if ( enterCodeStatusType === EnterCodeStatusType.CODE_EXPIRED ) {\r\n            return 'This code has expired.';\r\n        }\r\n        else if ( enterCodeStatusType === EnterCodeStatusType.TOO_MANY_ATTEMPTS ) {\r\n            return 'Too many failed attempts.';\r\n        }\r\n        else if ( enterCodeStatusType === EnterCodeStatusType.INTERNAL_SERVER_ERROR ) {\r\n            return 'Internal server error. Please refresh the page and try again.';\r\n        }\r\n        else if ( enterCodeStatusType === EnterCodeStatusType.RESENT_CODE) {\r\n            return `Another code has been sent to ${selectedContactMethod === 'email' ? email : phone}`;\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    formHelperTextIsError(): boolean {\r\n        return this.state.enterCodeStatusType !== EnterCodeStatusType.RESENT_CODE;\r\n    }\r\n\r\n    displayResendCodeLink(): boolean {\r\n        const enterCodeStatusType: EnterCodeStatusType = this.state.enterCodeStatusType;\r\n\r\n        return  enterCodeStatusType === EnterCodeStatusType.TOO_MANY_ATTEMPTS || enterCodeStatusType === EnterCodeStatusType.CODE_EXPIRED;\r\n    }\r\n\r\n    async resendCodeClicked(e: any) { // TODO: Type\r\n        const { email, selectedContactMethod } = this.state;\r\n\r\n        try {\r\n            await userAPI.sendResetCode(email, selectedContactMethod);\r\n\r\n            this.setState({enterCodeStatusType: EnterCodeStatusType.RESENT_CODE});   \r\n        }\r\n        catch (error) {\r\n            this.setState({ enterCodeStatusType: EnterCodeStatusType.INTERNAL_SERVER_ERROR });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { selectedContactMethod, phone, email } = this.state;\r\n        const contactDetail = selectedContactMethod === 'email' ? email : phone;\r\n        return (\r\n            <div className=\"auth-page-container\">\r\n                <div className=\"auth-page\">\r\n                    <Typography className=\"auth-header\" color=\"primary\" variant=\"h4\">Enter Security Code</Typography>\r\n                    <form className=\"auth-form\">\r\n                        <div className=\"auth-instructions desktop-only\">Please check your {selectedContactMethod} for the 8 digit code that was sent to {contactDetail}.</div>\r\n                        <TextField onChange={this.handleCodeChange} className=\"auth-txt-field\" label=\"########\" variant=\"filled\" helperText={this.getCodeHelperText()} error={this.displayCodeTextFieldError()}/>\r\n                        <Button onClick={ this.handleSubmit } className=\"auth-btn\" variant=\"contained\" color=\"primary\" size=\"medium\">Enter Code</Button>\r\n                        <FormHelperText className={`auth-err ${this.displayFormHelperText() ? \"\" : \"display-none\"}`} error={this.formHelperTextIsError()}>{this.getFormHelperText()}<span className={`resend-code ${this.displayResendCodeLink() ? \"\" : \"display-none\"}`} onClick={this.resendCodeClicked}>Resend Code?</span></FormHelperText>\r\n                    </form>\r\n                    <div className=\"non-important-btns-container\">\r\n                        <Link className=\"no-underline\" to={`/pickresetmethod?email=${email}&phone=${phone}`}>\r\n                            <Button className=\"enter-code-btn non-important-btn\" color=\"primary\">Try Another Way</Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EnterCode;","import React from 'react';\r\nimport { AuthContextConsumer } from '../contexts/authContext';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\nimport qs from 'qs';\r\n\r\nimport * as userAPI from '../api/user';\r\n\r\n\r\nimport PasswordInput from './PasswordInput';\r\n\r\nimport './ResetPassword.css';\r\n\r\ntype ResetPasswordState = {\r\n    resetPasswordFailureType: ResetPasswordFailureType,\r\n    code: string,\r\n    email: string,\r\n    password: string,\r\n    submitButtonTouched: boolean,\r\n    passwordChangeSuccess: boolean\r\n}\r\ntype ResetPasswordProps = {\r\n    location: any,\r\n    history: any\r\n}\r\n\r\nenum ResetPasswordFailureType {\r\n    PASSWORD_EXPIRED,\r\n    INTERNAL_SERVER_ERROR,\r\n    NONE\r\n}\r\n\r\nclass ResetPassword extends React.Component<ResetPasswordProps, ResetPasswordState> {\r\n\r\n    constructor(props: ResetPasswordProps) {\r\n        super(props);\r\n\r\n        let qsParse: qs.ParsedQs = qs.parse(this.props.location.search, { ignoreQueryPrefix: true });\r\n\r\n        let code: any = '';\r\n        let email: any = '';\r\n\r\n        if ( qsParse ) {\r\n            code = qsParse.code;\r\n            email = qsParse.email; // Need email either way for back button            \r\n        }\r\n\r\n        this.state = {\r\n            code,\r\n            email,\r\n            password: '',\r\n            resetPasswordFailureType: ResetPasswordFailureType.NONE,\r\n            submitButtonTouched: false,\r\n            passwordChangeSuccess: false \r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n    }\r\n\r\n    handlePasswordChange(e: any) {\r\n        const password = e.target.value;\r\n        this.setState({password});\r\n    }\r\n\r\n    displayPasswordError(): boolean {\r\n        return !this.passwordIsValid() && this.state.submitButtonTouched;\r\n    }\r\n\r\n    passwordHasCorrectLength(): boolean {\r\n        const { password } = this.state;\r\n\r\n        return password.length >= 8 && password.length <= 32;\r\n    }\r\n    \r\n    // TODO: Fix this\r\n    passwordHasCorrectCharacters(): boolean {\r\n        const { password } = this.state;\r\n\r\n        const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[^\\da-zA-Z]).{8,32}$/\r\n\r\n        return regex.test(password);\r\n\r\n    }\r\n\r\n    passwordIsValid(): boolean {\r\n        return this.passwordHasCorrectCharacters() && this.passwordHasCorrectLength();\r\n    }\r\n\r\n    getPasswordHelperText(): string {\r\n        const { submitButtonTouched } = this.state;\r\n\r\n        if ( !this.passwordHasCorrectLength() && submitButtonTouched ) {\r\n            return 'Enter between 8 and 32 characters';\r\n        }\r\n        else if ( !this.passwordHasCorrectCharacters() && submitButtonTouched ) {\r\n            return 'Include a letter, number, and special character';\r\n        }\r\n    \r\n        return 'Enter your new password';\r\n    }\r\n\r\n    displayFormError(): boolean {\r\n        return this.state.resetPasswordFailureType !== ResetPasswordFailureType.NONE;\r\n    }\r\n\r\n    getFormErrorText(): string {\r\n        const { resetPasswordFailureType } = this.state;\r\n\r\n        if ( resetPasswordFailureType === ResetPasswordFailureType.PASSWORD_EXPIRED ) {\r\n            return 'This reset code has expired.';\r\n        }\r\n        else if ( resetPasswordFailureType === ResetPasswordFailureType.INTERNAL_SERVER_ERROR ) {\r\n            return 'Internal server error. Please refresh the page and try again.';\r\n        }\r\n\r\n        return '';\r\n    }\r\n      \r\n    async handleSubmit(callback: any) { // TODO: Rename this\r\n        const { email, password, code } = this.state;\r\n\r\n        this.setState({submitButtonTouched: true});\r\n\r\n        if ( !this.passwordIsValid() ) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await userAPI.changePassword(email, password, code);\r\n            this.setState({resetPasswordFailureType: ResetPasswordFailureType.NONE, passwordChangeSuccess: true});\r\n   \r\n            callback();\r\n\r\n            setTimeout( () => {\r\n                this.props.history.push('/features/schedule');\r\n            }, 500);\r\n        }\r\n        catch ( error ) {\r\n            if ( error.response.status === 401 && error.response.data.message === 'Reset code has expired' ) {\r\n                this.setState({resetPasswordFailureType: ResetPasswordFailureType.PASSWORD_EXPIRED});\r\n                console.log('error.response.data',error.response.data);\r\n            }\r\n            else {\r\n                this.setState({resetPasswordFailureType: ResetPasswordFailureType.INTERNAL_SERVER_ERROR});\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const {passwordChangeSuccess} = this.state;\r\n\r\n        return (\r\n            <div className=\"auth-page-container\">\r\n                <div className=\"auth-page\">\r\n                    <Typography className=\"auth-header\" color=\"primary\" variant=\"h4\">Reset Password</Typography>\r\n                    <form className=\"auth-form\">\r\n                        <div className=\"auth-instructions desktop-only\">Enter a new password between 8 and 32 characters. Include at least one uppercase letter, lowercase letter, number, and special character. </div>\r\n                        <PasswordInput onChange={this.handlePasswordChange} inputProps={{ maxLength: 32 }} className=\"auth-txt-field\" error={this.displayPasswordError()} helperText={this.getPasswordHelperText()} label=\"New Password\"/>\r\n                        <AuthContextConsumer>\r\n                        {context => (\r\n                            <Button onClick={ e => this.handleSubmit(context.login) } className=\"auth-btn\" variant=\"contained\" color=\"primary\" size=\"medium\">Change Password</Button>\r\n                        )}\r\n                        </AuthContextConsumer>\r\n                        <FormHelperText className={`auth-err ${this.displayFormError() ? \"\" : \"display-none\"}`} error={this.displayFormError()}>{this.getFormErrorText()}</FormHelperText>\r\n                        <div className={`change-pw-success ${passwordChangeSuccess ? \"\" : \"display-none\"}`}>\r\n                            <div className=\"change-pw-success-txt\">Password Changed</div>\r\n                            <CheckCircleOutlineIcon color=\"primary\"/>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResetPassword;","import React from 'react';\r\nimport { Route, Redirect  } from 'react-router-dom';\r\n\r\nimport { AuthContextConsumer } from '../contexts/authContext';\r\n\r\nimport Login from './Login';\r\n\r\ntype PrivateRouteState = {}\r\ntype PrivateRouteProps = { options?: any, component?: any, children?: any, path?: any }\r\n\r\nclass PrivateRoute extends React.Component<PrivateRouteProps, PrivateRouteState> {\r\n\r\n    render() {\r\n      const { options, component, children } = this.props;\r\n\r\n      return (\r\n        <AuthContextConsumer>\r\n          {\r\n\r\n          (context) => { return context.isLoggedIn ? (\r\n            <Route path={this.props.path} {...options} component={ context.isLoggedIn ? component : Login}>{children}</Route> )\r\n            : (<Redirect to=\"/login\"/>)\r\n          }\r\n          \r\n          }\r\n        </AuthContextConsumer>\r\n      );\r\n    }\r\n}\r\n\r\nexport default PrivateRoute;","import { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\n\r\nimport PrayerRequests from './components/PrayerRequests';\r\nimport Main from './components/Main';\r\nimport HomelessPeople from './components/HomelessPeople';\r\nimport MapComponent from './components/MapComponent';\r\nimport Schedule from './components/Schedule';\r\nimport AccountSettings from './components/AccountSettings';\r\nimport Splash from './components/Splash';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport FindAccount from './components/FindAccount';\r\nimport PickResetMethod from './components/PickResetMethod';\r\nimport EnterCode from './components/EnterCode';\r\nimport ResetPassword from './components/ResetPassword';\r\n\r\nimport PrivateRoute from './components/PrivateRoute';\r\n\r\n\r\nimport './App.css';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/register\" component={Register} />\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/findaccount\" component={FindAccount} />\r\n        <Route exact path=\"/pickresetmethod\" component={PickResetMethod} />\r\n        <Route exact path=\"/entercode\" component={EnterCode} />\r\n        <Route exact path=\"/resetpassword\" component={ResetPassword} />\r\n        <Route exact path=\"/\" component={Splash} />\r\n        <PrivateRoute path=\"/features\">\r\n          <Main>\r\n            <Route path=\"/features/schedule\" component={Schedule} />\r\n            <Route path=\"/features/homelesspeople\" component={HomelessPeople} />\r\n            <Route path=\"/features/prayerrequests\" component={PrayerRequests} />\r\n            <Route path=\"/features/map\" component={MapComponent} />\r\n            <Route path=\"/features/accountsettings\" component={AccountSettings} />\r\n          </Main>\r\n        </PrivateRoute>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\r\nimport orange from '@material-ui/core/colors/orange';\r\nimport teal from '@material-ui/core/colors/teal';\r\n\r\nlet theme = createMuiTheme({\r\n  palette: {\r\n    primary: teal,\r\n    secondary: orange\r\n  },\r\n  status: {\r\n      danger: 'red'\r\n  }\r\n});\r\n\r\ntheme = responsiveFontSizes(theme);\r\n\r\nexport default theme;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport { AuthContextProvider } from \"./contexts/authContext\";\r\n\r\nimport theme from './theme';\r\n\r\nReactDOM.render(\r\n  //<React.StrictMode>\r\n    <AuthContextProvider>\r\n      <ThemeProvider theme={theme}>\r\n        <App />\r\n      </ThemeProvider>\r\n    </AuthContextProvider>,\r\n  //</React.StrictMode>\r\n\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}